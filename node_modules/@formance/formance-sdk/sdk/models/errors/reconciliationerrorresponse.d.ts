import * as z from "zod";
/**
 * Error response
 */
export type ReconciliationErrorResponseData = {
    details?: string | undefined;
    errorCode: string;
    errorMessage: string;
};
/**
 * Error response
 */
export declare class ReconciliationErrorResponse extends Error {
    details?: string | undefined;
    errorCode: string;
    errorMessage: string;
    /** The original data that was passed to this error instance. */
    data$: ReconciliationErrorResponseData;
    constructor(err: ReconciliationErrorResponseData);
}
/** @internal */
export declare namespace ReconciliationErrorResponse$ {
    const inboundSchema: z.ZodType<ReconciliationErrorResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        details?: string | undefined;
        errorCode: string;
        errorMessage: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReconciliationErrorResponse>;
}
//# sourceMappingURL=reconciliationerrorresponse.d.ts.map