"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebhooksErrorResponse$ = exports.WebhooksErrorResponse = void 0;
const shared = __importStar(require("../shared"));
const z = __importStar(require("zod"));
/**
 * Error
 */
class WebhooksErrorResponse extends Error {
    constructor(err) {
        super("");
        this.data$ = err;
        if (err.details != null) {
            this.details = err.details;
        }
        this.errorCode = err.errorCode;
        this.errorMessage = err.errorMessage;
        this.message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : "API error occurred";
        this.name = "WebhooksErrorResponse";
    }
}
exports.WebhooksErrorResponse = WebhooksErrorResponse;
/** @internal */
var WebhooksErrorResponse$;
(function (WebhooksErrorResponse$) {
    WebhooksErrorResponse$.inboundSchema = z
        .object({
        details: z.string().optional(),
        errorCode: shared.WebhooksErrorsEnum$.inboundSchema,
        errorMessage: z.string(),
    })
        .transform((v) => {
        return new WebhooksErrorResponse(v);
    });
    WebhooksErrorResponse$.outboundSchema = z
        .instanceof(WebhooksErrorResponse)
        .transform((v) => v.data$)
        .pipe(z.object({
        details: z.string().optional(),
        errorCode: shared.WebhooksErrorsEnum$.outboundSchema,
        errorMessage: z.string(),
    }));
})(WebhooksErrorResponse$ || (exports.WebhooksErrorResponse$ = WebhooksErrorResponse$ = {}));
//# sourceMappingURL=webhookserrorresponse.js.map