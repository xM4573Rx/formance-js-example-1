"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.V2ReadTriggerResponse$ = exports.V2ReadTriggerRequest$ = void 0;
const primitives_1 = require("../../../lib/primitives");
const shared = __importStar(require("../shared"));
const z = __importStar(require("zod"));
/** @internal */
var V2ReadTriggerRequest$;
(function (V2ReadTriggerRequest$) {
    V2ReadTriggerRequest$.inboundSchema = z.object({
        triggerID: z.string(),
    });
    V2ReadTriggerRequest$.outboundSchema = z.object({
        triggerID: z.string(),
    });
})(V2ReadTriggerRequest$ || (exports.V2ReadTriggerRequest$ = V2ReadTriggerRequest$ = {}));
/** @internal */
var V2ReadTriggerResponse$;
(function (V2ReadTriggerResponse$) {
    V2ReadTriggerResponse$.inboundSchema = z
        .object({
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
        V2ReadTriggerResponse: shared.V2ReadTriggerResponse$.inboundSchema.optional(),
    })
        .transform((v) => {
        return (0, primitives_1.remap)(v, {
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
            V2ReadTriggerResponse: "v2ReadTriggerResponse",
        });
    });
    V2ReadTriggerResponse$.outboundSchema = z
        .object({
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
        v2ReadTriggerResponse: shared.V2ReadTriggerResponse$.outboundSchema.optional(),
    })
        .transform((v) => {
        return (0, primitives_1.remap)(v, {
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
            v2ReadTriggerResponse: "V2ReadTriggerResponse",
        });
    });
})(V2ReadTriggerResponse$ || (exports.V2ReadTriggerResponse$ = V2ReadTriggerResponse$ = {}));
//# sourceMappingURL=v2readtrigger.js.map