import * as z from "zod";
export type SendEventRequestBody = {
    name: string;
};
export type SendEventRequest = {
    requestBody?: SendEventRequestBody | undefined;
    /**
     * The instance id
     */
    instanceID: string;
};
export type SendEventResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace SendEventRequestBody$ {
    const inboundSchema: z.ZodType<SendEventRequestBody, z.ZodTypeDef, unknown>;
    type Outbound = {
        name: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SendEventRequestBody>;
}
/** @internal */
export declare namespace SendEventRequest$ {
    const inboundSchema: z.ZodType<SendEventRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        RequestBody?: SendEventRequestBody$.Outbound | undefined;
        instanceID: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SendEventRequest>;
}
/** @internal */
export declare namespace SendEventResponse$ {
    const inboundSchema: z.ZodType<SendEventResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SendEventResponse>;
}
//# sourceMappingURL=sendevent.d.ts.map