import * as z from "zod";
export type AddMetadataToAccountRequest = {
    /**
     * metadata
     */
    requestBody: {
        [k: string]: any;
    } | null;
    /**
     * Exact address of the account. It must match the following regular expressions pattern:
     *
     * @remarks
     * ```
     * ^\w+(:\w+)*$
     * ```
     *
     */
    address: string;
    /**
     * Name of the ledger.
     */
    ledger: string;
};
export type AddMetadataToAccountResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace AddMetadataToAccountRequest$ {
    const inboundSchema: z.ZodType<AddMetadataToAccountRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        RequestBody: {
            [k: string]: any;
        } | null;
        address: string;
        ledger: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddMetadataToAccountRequest>;
}
/** @internal */
export declare namespace AddMetadataToAccountResponse$ {
    const inboundSchema: z.ZodType<AddMetadataToAccountResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddMetadataToAccountResponse>;
}
//# sourceMappingURL=addmetadatatoaccount.d.ts.map