import * as shared from "../shared";
import * as z from "zod";
export type V2CreateTransactionRequest = {
    /**
     * Use an idempotency key
     */
    idempotencyKey?: string | undefined;
    /**
     * The request body must contain at least one of the following objects:
     *
     * @remarks
     *   - `postings`: suitable for simple transactions
     *   - `script`: enabling more complex transactions with Numscript
     *
     */
    v2PostTransaction: shared.V2PostTransaction;
    /**
     * Set the dryRun mode. dry run mode doesn't add the logs to the database or publish a message to the message broker.
     */
    dryRun?: boolean | undefined;
    /**
     * Name of the ledger.
     */
    ledger: string;
};
export type V2CreateTransactionResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * OK
     */
    v2CreateTransactionResponse?: shared.V2CreateTransactionResponse | undefined;
};
/** @internal */
export declare namespace V2CreateTransactionRequest$ {
    const inboundSchema: z.ZodType<V2CreateTransactionRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        "Idempotency-Key"?: string | undefined;
        V2PostTransaction: shared.V2PostTransaction$.Outbound;
        dryRun?: boolean | undefined;
        ledger: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2CreateTransactionRequest>;
}
/** @internal */
export declare namespace V2CreateTransactionResponse$ {
    const inboundSchema: z.ZodType<V2CreateTransactionResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        V2CreateTransactionResponse?: shared.V2CreateTransactionResponse$.Outbound | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2CreateTransactionResponse>;
}
//# sourceMappingURL=v2createtransaction.d.ts.map