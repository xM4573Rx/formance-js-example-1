import * as z from "zod";
export type V2SendEventRequestBody = {
    name: string;
};
export type V2SendEventRequest = {
    requestBody?: V2SendEventRequestBody | undefined;
    /**
     * The instance id
     */
    instanceID: string;
};
export type V2SendEventResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace V2SendEventRequestBody$ {
    const inboundSchema: z.ZodType<V2SendEventRequestBody, z.ZodTypeDef, unknown>;
    type Outbound = {
        name: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2SendEventRequestBody>;
}
/** @internal */
export declare namespace V2SendEventRequest$ {
    const inboundSchema: z.ZodType<V2SendEventRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        RequestBody?: V2SendEventRequestBody$.Outbound | undefined;
        instanceID: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2SendEventRequest>;
}
/** @internal */
export declare namespace V2SendEventResponse$ {
    const inboundSchema: z.ZodType<V2SendEventResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2SendEventResponse>;
}
//# sourceMappingURL=v2sendevent.d.ts.map