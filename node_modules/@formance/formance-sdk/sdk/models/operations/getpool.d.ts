import * as shared from "../shared";
import * as z from "zod";
export type GetPoolRequest = {
    /**
     * The pool ID.
     */
    poolId: string;
};
export type GetPoolResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * OK
     */
    poolResponse?: shared.PoolResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace GetPoolRequest$ {
    const inboundSchema: z.ZodType<GetPoolRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        poolId: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPoolRequest>;
}
/** @internal */
export declare namespace GetPoolResponse$ {
    const inboundSchema: z.ZodType<GetPoolResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        PoolResponse?: shared.PoolResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPoolResponse>;
}
//# sourceMappingURL=getpool.d.ts.map