import * as shared from "../shared";
import * as z from "zod";
export type UpdateMappingRequest = {
    mapping: shared.Mapping | null;
    /**
     * Name of the ledger.
     */
    ledger: string;
};
export type UpdateMappingResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * OK
     */
    mappingResponse?: shared.MappingResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace UpdateMappingRequest$ {
    const inboundSchema: z.ZodType<UpdateMappingRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        Mapping: shared.Mapping$.Outbound | null;
        ledger: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateMappingRequest>;
}
/** @internal */
export declare namespace UpdateMappingResponse$ {
    const inboundSchema: z.ZodType<UpdateMappingResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        MappingResponse?: shared.MappingResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateMappingResponse>;
}
//# sourceMappingURL=updatemapping.d.ts.map