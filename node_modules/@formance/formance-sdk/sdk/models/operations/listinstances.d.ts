import * as shared from "../shared";
import * as z from "zod";
export type ListInstancesRequest = {
    /**
     * Filter running instances
     */
    running?: boolean | undefined;
    /**
     * A workflow id
     */
    workflowID?: string | undefined;
};
export type ListInstancesResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * List of workflow instances
     */
    listRunsResponse?: shared.ListRunsResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace ListInstancesRequest$ {
    const inboundSchema: z.ZodType<ListInstancesRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        running?: boolean | undefined;
        workflowID?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListInstancesRequest>;
}
/** @internal */
export declare namespace ListInstancesResponse$ {
    const inboundSchema: z.ZodType<ListInstancesResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        ListRunsResponse?: shared.ListRunsResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListInstancesResponse>;
}
//# sourceMappingURL=listinstances.d.ts.map