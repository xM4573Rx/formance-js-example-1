import * as shared from "../shared";
import * as z from "zod";
export type ReadStatsRequest = {
    /**
     * name of the ledger
     */
    ledger: string;
};
export type ReadStatsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * OK
     */
    statsResponse?: shared.StatsResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace ReadStatsRequest$ {
    const inboundSchema: z.ZodType<ReadStatsRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        ledger: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReadStatsRequest>;
}
/** @internal */
export declare namespace ReadStatsResponse$ {
    const inboundSchema: z.ZodType<ReadStatsResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatsResponse?: shared.StatsResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReadStatsResponse>;
}
//# sourceMappingURL=readstats.d.ts.map