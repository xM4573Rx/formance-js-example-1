import * as shared from "../shared";
import * as z from "zod";
export type ReconcileRequest = {
    reconciliationRequest: shared.ReconciliationRequest;
    /**
     * The policy ID.
     */
    policyID: string;
};
export type ReconcileResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * OK
     */
    reconciliationResponse?: shared.ReconciliationResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace ReconcileRequest$ {
    const inboundSchema: z.ZodType<ReconcileRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        ReconciliationRequest: shared.ReconciliationRequest$.Outbound;
        policyID: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReconcileRequest>;
}
/** @internal */
export declare namespace ReconcileResponse$ {
    const inboundSchema: z.ZodType<ReconcileResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        ReconciliationResponse?: shared.ReconciliationResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReconcileResponse>;
}
//# sourceMappingURL=reconcile.d.ts.map