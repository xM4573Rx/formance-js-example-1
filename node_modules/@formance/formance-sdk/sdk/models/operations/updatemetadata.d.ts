import * as z from "zod";
export type UpdateMetadataRequest = {
    requestBody: {
        [k: string]: string;
    } | null;
    /**
     * The payment ID.
     */
    paymentId: string;
};
export type UpdateMetadataResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace UpdateMetadataRequest$ {
    const inboundSchema: z.ZodType<UpdateMetadataRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        RequestBody: {
            [k: string]: string;
        } | null;
        paymentId: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateMetadataRequest>;
}
/** @internal */
export declare namespace UpdateMetadataResponse$ {
    const inboundSchema: z.ZodType<UpdateMetadataResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateMetadataResponse>;
}
//# sourceMappingURL=updatemetadata.d.ts.map