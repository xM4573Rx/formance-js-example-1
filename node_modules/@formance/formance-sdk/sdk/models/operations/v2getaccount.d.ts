import * as shared from "../shared";
import * as z from "zod";
export type V2GetAccountRequest = {
    /**
     * Exact address of the account. It must match the following regular expressions pattern:
     *
     * @remarks
     * ```
     * ^\w+(:\w+)*$
     * ```
     *
     */
    address: string;
    expand?: string | undefined;
    /**
     * Name of the ledger.
     */
    ledger: string;
    pit?: Date | undefined;
};
export type V2GetAccountResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * OK
     */
    v2AccountResponse?: shared.V2AccountResponse | undefined;
};
/** @internal */
export declare namespace V2GetAccountRequest$ {
    const inboundSchema: z.ZodType<V2GetAccountRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        address: string;
        expand?: string | undefined;
        ledger: string;
        pit?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2GetAccountRequest>;
}
/** @internal */
export declare namespace V2GetAccountResponse$ {
    const inboundSchema: z.ZodType<V2GetAccountResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        V2AccountResponse?: shared.V2AccountResponse$.Outbound | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2GetAccountResponse>;
}
//# sourceMappingURL=v2getaccount.d.ts.map