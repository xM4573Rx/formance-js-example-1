import * as shared from "../shared";
import * as z from "zod";
export type DeactivateConfigRequest = {
    /**
     * Config ID
     */
    id: string;
};
export type DeactivateConfigResponse = {
    /**
     * Config successfully deactivated.
     */
    configResponse?: shared.ConfigResponse | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace DeactivateConfigRequest$ {
    const inboundSchema: z.ZodType<DeactivateConfigRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        id: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeactivateConfigRequest>;
}
/** @internal */
export declare namespace DeactivateConfigResponse$ {
    const inboundSchema: z.ZodType<DeactivateConfigResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ConfigResponse?: shared.ConfigResponse$.Outbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeactivateConfigResponse>;
}
//# sourceMappingURL=deactivateconfig.d.ts.map