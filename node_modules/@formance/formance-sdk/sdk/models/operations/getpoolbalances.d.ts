import * as shared from "../shared";
import * as z from "zod";
export type GetPoolBalancesRequest = {
    /**
     * Filter balances by date.
     *
     * @remarks
     *
     */
    at: Date;
    /**
     * The pool ID.
     */
    poolId: string;
};
export type GetPoolBalancesResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * OK
     */
    poolBalancesResponse?: shared.PoolBalancesResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace GetPoolBalancesRequest$ {
    const inboundSchema: z.ZodType<GetPoolBalancesRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        at: string;
        poolId: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPoolBalancesRequest>;
}
/** @internal */
export declare namespace GetPoolBalancesResponse$ {
    const inboundSchema: z.ZodType<GetPoolBalancesResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        PoolBalancesResponse?: shared.PoolBalancesResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPoolBalancesResponse>;
}
//# sourceMappingURL=getpoolbalances.d.ts.map