import * as shared from "../shared";
import * as z from "zod";
export type CreateBalanceRequest = {
    createBalanceRequest?: shared.CreateBalanceRequest | undefined;
    id: string;
};
export type CreateBalanceResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Created balance
     */
    createBalanceResponse?: shared.CreateBalanceResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace CreateBalanceRequest$ {
    const inboundSchema: z.ZodType<CreateBalanceRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        CreateBalanceRequest?: shared.CreateBalanceRequest$.Outbound | undefined;
        id: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateBalanceRequest>;
}
/** @internal */
export declare namespace CreateBalanceResponse$ {
    const inboundSchema: z.ZodType<CreateBalanceResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        CreateBalanceResponse?: shared.CreateBalanceResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateBalanceResponse>;
}
//# sourceMappingURL=createbalance.d.ts.map