import * as z from "zod";
export type V2UpdateLedgerMetadataRequest = {
    requestBody?: {
        [k: string]: string;
    } | undefined;
    /**
     * Name of the ledger.
     */
    ledger: string;
};
export type V2UpdateLedgerMetadataResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace V2UpdateLedgerMetadataRequest$ {
    const inboundSchema: z.ZodType<V2UpdateLedgerMetadataRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        RequestBody?: {
            [k: string]: string;
        } | undefined;
        ledger: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2UpdateLedgerMetadataRequest>;
}
/** @internal */
export declare namespace V2UpdateLedgerMetadataResponse$ {
    const inboundSchema: z.ZodType<V2UpdateLedgerMetadataResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2UpdateLedgerMetadataResponse>;
}
//# sourceMappingURL=v2updateledgermetadata.d.ts.map