import * as shared from "../shared";
import * as z from "zod";
export type V2GetInstanceRequest = {
    /**
     * The instance id
     */
    instanceID: string;
};
export type V2GetInstanceResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * The workflow instance
     */
    v2GetWorkflowInstanceResponse?: shared.V2GetWorkflowInstanceResponse | undefined;
};
/** @internal */
export declare namespace V2GetInstanceRequest$ {
    const inboundSchema: z.ZodType<V2GetInstanceRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        instanceID: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2GetInstanceRequest>;
}
/** @internal */
export declare namespace V2GetInstanceResponse$ {
    const inboundSchema: z.ZodType<V2GetInstanceResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        V2GetWorkflowInstanceResponse?: shared.V2GetWorkflowInstanceResponse$.Outbound | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2GetInstanceResponse>;
}
//# sourceMappingURL=v2getinstance.d.ts.map