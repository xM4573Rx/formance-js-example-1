import * as shared from "../shared";
import * as z from "zod";
export type ListTriggersRequest = {
    /**
     * search by name
     */
    name?: string | undefined;
};
export type ListTriggersResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * List of triggers
     */
    listTriggersResponse?: shared.ListTriggersResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace ListTriggersRequest$ {
    const inboundSchema: z.ZodType<ListTriggersRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        name?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListTriggersRequest>;
}
/** @internal */
export declare namespace ListTriggersResponse$ {
    const inboundSchema: z.ZodType<ListTriggersResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        ListTriggersResponse?: shared.ListTriggersResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListTriggersResponse>;
}
//# sourceMappingURL=listtriggers.d.ts.map