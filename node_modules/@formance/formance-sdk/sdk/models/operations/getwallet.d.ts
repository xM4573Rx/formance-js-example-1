import * as shared from "../shared";
import * as z from "zod";
export type GetWalletRequest = {
    id: string;
};
export type GetWalletResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Wallet
     */
    getWalletResponse?: shared.GetWalletResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace GetWalletRequest$ {
    const inboundSchema: z.ZodType<GetWalletRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        id: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetWalletRequest>;
}
/** @internal */
export declare namespace GetWalletResponse$ {
    const inboundSchema: z.ZodType<GetWalletResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        GetWalletResponse?: shared.GetWalletResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetWalletResponse>;
}
//# sourceMappingURL=getwallet.d.ts.map