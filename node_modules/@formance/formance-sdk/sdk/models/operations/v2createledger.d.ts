import * as shared from "../shared";
import * as z from "zod";
export type V2CreateLedgerRequest = {
    v2CreateLedgerRequest?: shared.V2CreateLedgerRequest | undefined;
    /**
     * Name of the ledger.
     */
    ledger: string;
};
export type V2CreateLedgerResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace V2CreateLedgerRequest$ {
    const inboundSchema: z.ZodType<V2CreateLedgerRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        V2CreateLedgerRequest?: shared.V2CreateLedgerRequest$.Outbound | undefined;
        ledger: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2CreateLedgerRequest>;
}
/** @internal */
export declare namespace V2CreateLedgerResponse$ {
    const inboundSchema: z.ZodType<V2CreateLedgerResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2CreateLedgerResponse>;
}
//# sourceMappingURL=v2createledger.d.ts.map