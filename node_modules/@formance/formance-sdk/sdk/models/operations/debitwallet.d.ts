import * as shared from "../shared";
import * as z from "zod";
export type DebitWalletRequest = {
    debitWalletRequest?: shared.DebitWalletRequest | undefined;
    id: string;
};
export type DebitWalletResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Wallet successfully debited as a pending hold
     */
    debitWalletResponse?: shared.DebitWalletResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace DebitWalletRequest$ {
    const inboundSchema: z.ZodType<DebitWalletRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        DebitWalletRequest?: shared.DebitWalletRequest$.Outbound | undefined;
        id: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DebitWalletRequest>;
}
/** @internal */
export declare namespace DebitWalletResponse$ {
    const inboundSchema: z.ZodType<DebitWalletResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        DebitWalletResponse?: shared.DebitWalletResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DebitWalletResponse>;
}
//# sourceMappingURL=debitwallet.d.ts.map