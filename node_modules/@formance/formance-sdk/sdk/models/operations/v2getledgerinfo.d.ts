import * as shared from "../shared";
import * as z from "zod";
export type V2GetLedgerInfoRequest = {
    /**
     * Name of the ledger.
     */
    ledger: string;
};
export type V2GetLedgerInfoResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * OK
     */
    v2LedgerInfoResponse?: shared.V2LedgerInfoResponse | undefined;
};
/** @internal */
export declare namespace V2GetLedgerInfoRequest$ {
    const inboundSchema: z.ZodType<V2GetLedgerInfoRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        ledger: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2GetLedgerInfoRequest>;
}
/** @internal */
export declare namespace V2GetLedgerInfoResponse$ {
    const inboundSchema: z.ZodType<V2GetLedgerInfoResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        V2LedgerInfoResponse?: shared.V2LedgerInfoResponse$.Outbound | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2GetLedgerInfoResponse>;
}
//# sourceMappingURL=v2getledgerinfo.d.ts.map