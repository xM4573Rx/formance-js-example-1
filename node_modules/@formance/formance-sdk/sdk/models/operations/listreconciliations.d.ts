import * as shared from "../shared";
import * as z from "zod";
export type ListReconciliationsRequest = {
    /**
     * Parameter used in pagination requests. Maximum page size is set to 15.
     *
     * @remarks
     * Set to the value of next for the next page of results.
     * Set to the value of previous for the previous page of results.
     * No other parameters can be set when this parameter is set.
     *
     */
    cursor?: string | undefined;
    /**
     * The maximum number of results to return per page.
     *
     * @remarks
     *
     */
    pageSize?: number | undefined;
};
export type ListReconciliationsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * OK
     */
    reconciliationsCursorResponse?: shared.ReconciliationsCursorResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace ListReconciliationsRequest$ {
    const inboundSchema: z.ZodType<ListReconciliationsRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor?: string | undefined;
        pageSize?: number | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListReconciliationsRequest>;
}
/** @internal */
export declare namespace ListReconciliationsResponse$ {
    const inboundSchema: z.ZodType<ListReconciliationsResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        ReconciliationsCursorResponse?: shared.ReconciliationsCursorResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListReconciliationsResponse>;
}
//# sourceMappingURL=listreconciliations.d.ts.map