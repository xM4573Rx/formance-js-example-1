import * as shared from "../shared";
import * as z from "zod";
export type ReadUserRequest = {
    /**
     * User ID
     */
    userId: string;
};
export type ReadUserResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Retrieved user
     */
    readUserResponse?: shared.ReadUserResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace ReadUserRequest$ {
    const inboundSchema: z.ZodType<ReadUserRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        userId: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReadUserRequest>;
}
/** @internal */
export declare namespace ReadUserResponse$ {
    const inboundSchema: z.ZodType<ReadUserResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        ReadUserResponse?: shared.ReadUserResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReadUserResponse>;
}
//# sourceMappingURL=readuser.d.ts.map