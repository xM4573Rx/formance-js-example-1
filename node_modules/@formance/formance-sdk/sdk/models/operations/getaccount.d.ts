import * as shared from "../shared";
import * as z from "zod";
export type GetAccountRequest = {
    /**
     * Exact address of the account. It must match the following regular expressions pattern:
     *
     * @remarks
     * ```
     * ^\w+(:\w+)*$
     * ```
     *
     */
    address: string;
    /**
     * Name of the ledger.
     */
    ledger: string;
};
export type GetAccountResponse = {
    /**
     * OK
     */
    accountResponse?: shared.AccountResponse | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace GetAccountRequest$ {
    const inboundSchema: z.ZodType<GetAccountRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        address: string;
        ledger: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAccountRequest>;
}
/** @internal */
export declare namespace GetAccountResponse$ {
    const inboundSchema: z.ZodType<GetAccountResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        AccountResponse?: shared.AccountResponse$.Outbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAccountResponse>;
}
//# sourceMappingURL=getaccount.d.ts.map