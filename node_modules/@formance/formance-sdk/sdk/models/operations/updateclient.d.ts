import * as shared from "../shared";
import * as z from "zod";
export type UpdateClientRequest = {
    updateClientRequest?: shared.UpdateClientRequest | undefined;
    /**
     * Client ID
     */
    clientId: string;
};
export type UpdateClientResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Updated client
     */
    updateClientResponse?: shared.UpdateClientResponse | undefined;
};
/** @internal */
export declare namespace UpdateClientRequest$ {
    const inboundSchema: z.ZodType<UpdateClientRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        UpdateClientRequest?: shared.UpdateClientRequest$.Outbound | undefined;
        clientId: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateClientRequest>;
}
/** @internal */
export declare namespace UpdateClientResponse$ {
    const inboundSchema: z.ZodType<UpdateClientResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        UpdateClientResponse?: shared.UpdateClientResponse$.Outbound | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateClientResponse>;
}
//# sourceMappingURL=updateclient.d.ts.map