import * as shared from "../shared";
import * as z from "zod";
export type ReadTriggerRequest = {
    /**
     * The trigger id
     */
    triggerID: string;
};
export type ReadTriggerResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * A specific trigger
     */
    readTriggerResponse?: shared.ReadTriggerResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace ReadTriggerRequest$ {
    const inboundSchema: z.ZodType<ReadTriggerRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        triggerID: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReadTriggerRequest>;
}
/** @internal */
export declare namespace ReadTriggerResponse$ {
    const inboundSchema: z.ZodType<ReadTriggerResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        ReadTriggerResponse?: shared.ReadTriggerResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReadTriggerResponse>;
}
//# sourceMappingURL=readtrigger.d.ts.map