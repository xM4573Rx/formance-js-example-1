import * as z from "zod";
export type UpdateWalletRequestBody = {
    /**
     * Custom metadata to attach to this wallet.
     */
    metadata: {
        [k: string]: string;
    };
};
export type UpdateWalletRequest = {
    requestBody?: UpdateWalletRequestBody | undefined;
    id: string;
};
export type UpdateWalletResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace UpdateWalletRequestBody$ {
    const inboundSchema: z.ZodType<UpdateWalletRequestBody, z.ZodTypeDef, unknown>;
    type Outbound = {
        metadata: {
            [k: string]: string;
        };
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateWalletRequestBody>;
}
/** @internal */
export declare namespace UpdateWalletRequest$ {
    const inboundSchema: z.ZodType<UpdateWalletRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        RequestBody?: UpdateWalletRequestBody$.Outbound | undefined;
        id: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateWalletRequest>;
}
/** @internal */
export declare namespace UpdateWalletResponse$ {
    const inboundSchema: z.ZodType<UpdateWalletResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateWalletResponse>;
}
//# sourceMappingURL=updatewallet.d.ts.map