import * as shared from "../shared";
import * as z from "zod";
export type GetConnectorTaskRequest = {
    /**
     * The name of the connector.
     */
    connector: shared.Connector;
    /**
     * The task ID.
     */
    taskId: string;
};
export type GetConnectorTaskResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * OK
     */
    taskResponse?: shared.TaskResponse | undefined;
};
/** @internal */
export declare namespace GetConnectorTaskRequest$ {
    const inboundSchema: z.ZodType<GetConnectorTaskRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        connector: string;
        taskId: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetConnectorTaskRequest>;
}
/** @internal */
export declare namespace GetConnectorTaskResponse$ {
    const inboundSchema: z.ZodType<GetConnectorTaskResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        TaskResponse?: shared.TaskResponse$.Outbound | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetConnectorTaskResponse>;
}
//# sourceMappingURL=getconnectortask.d.ts.map