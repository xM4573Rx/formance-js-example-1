import * as shared from "../shared";
import * as z from "zod";
export type GetInstanceHistoryRequest = {
    /**
     * The instance id
     */
    instanceID: string;
};
export type GetInstanceHistoryResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * The workflow instance history
     */
    getWorkflowInstanceHistoryResponse?: shared.GetWorkflowInstanceHistoryResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace GetInstanceHistoryRequest$ {
    const inboundSchema: z.ZodType<GetInstanceHistoryRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        instanceID: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetInstanceHistoryRequest>;
}
/** @internal */
export declare namespace GetInstanceHistoryResponse$ {
    const inboundSchema: z.ZodType<GetInstanceHistoryResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        GetWorkflowInstanceHistoryResponse?: shared.GetWorkflowInstanceHistoryResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetInstanceHistoryResponse>;
}
//# sourceMappingURL=getinstancehistory.d.ts.map