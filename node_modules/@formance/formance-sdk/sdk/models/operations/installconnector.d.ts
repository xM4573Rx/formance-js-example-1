import * as shared from "../shared";
import * as z from "zod";
export type InstallConnectorRequest = {
    connectorConfig: shared.ConnectorConfig;
    /**
     * The name of the connector.
     */
    connector: shared.Connector;
};
export type InstallConnectorResponse = {
    /**
     * OK
     */
    connectorResponse?: shared.ConnectorResponse | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace InstallConnectorRequest$ {
    const inboundSchema: z.ZodType<InstallConnectorRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        ConnectorConfig: shared.ConnectorConfig$.Outbound;
        connector: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InstallConnectorRequest>;
}
/** @internal */
export declare namespace InstallConnectorResponse$ {
    const inboundSchema: z.ZodType<InstallConnectorResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ConnectorResponse?: shared.ConnectorResponse$.Outbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InstallConnectorResponse>;
}
//# sourceMappingURL=installconnector.d.ts.map