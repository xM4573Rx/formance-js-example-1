import * as shared from "../shared";
import * as z from "zod";
export type ListTriggersOccurrencesRequest = {
    /**
     * The trigger id
     */
    triggerID: string;
};
export type ListTriggersOccurrencesResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * List of triggers occurrences
     */
    listTriggersOccurrencesResponse?: shared.ListTriggersOccurrencesResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace ListTriggersOccurrencesRequest$ {
    const inboundSchema: z.ZodType<ListTriggersOccurrencesRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        triggerID: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListTriggersOccurrencesRequest>;
}
/** @internal */
export declare namespace ListTriggersOccurrencesResponse$ {
    const inboundSchema: z.ZodType<ListTriggersOccurrencesResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        ListTriggersOccurrencesResponse?: shared.ListTriggersOccurrencesResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListTriggersOccurrencesResponse>;
}
//# sourceMappingURL=listtriggersoccurrences.d.ts.map