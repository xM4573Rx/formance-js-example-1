import * as shared from "../shared";
import * as z from "zod";
export type GetWorkflowRequest = {
    /**
     * The flow id
     */
    flowId: string;
};
export type GetWorkflowResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * The workflow
     */
    getWorkflowResponse?: shared.GetWorkflowResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace GetWorkflowRequest$ {
    const inboundSchema: z.ZodType<GetWorkflowRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        flowId: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetWorkflowRequest>;
}
/** @internal */
export declare namespace GetWorkflowResponse$ {
    const inboundSchema: z.ZodType<GetWorkflowResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        GetWorkflowResponse?: shared.GetWorkflowResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetWorkflowResponse>;
}
//# sourceMappingURL=getworkflow.d.ts.map