import * as z from "zod";
export type VoidHoldRequest = {
    holdId: string;
};
export type VoidHoldResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace VoidHoldRequest$ {
    const inboundSchema: z.ZodType<VoidHoldRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        hold_id: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, VoidHoldRequest>;
}
/** @internal */
export declare namespace VoidHoldResponse$ {
    const inboundSchema: z.ZodType<VoidHoldResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, VoidHoldResponse>;
}
//# sourceMappingURL=voidhold.d.ts.map