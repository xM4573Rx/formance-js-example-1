import * as shared from "../shared";
import * as z from "zod";
export type GetTransferInitiationRequest = {
    /**
     * The transfer ID.
     */
    transferId: string;
};
export type GetTransferInitiationResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * OK
     */
    transferInitiationResponse?: shared.TransferInitiationResponse | undefined;
};
/** @internal */
export declare namespace GetTransferInitiationRequest$ {
    const inboundSchema: z.ZodType<GetTransferInitiationRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        transferId: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTransferInitiationRequest>;
}
/** @internal */
export declare namespace GetTransferInitiationResponse$ {
    const inboundSchema: z.ZodType<GetTransferInitiationResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        TransferInitiationResponse?: shared.TransferInitiationResponse$.Outbound | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTransferInitiationResponse>;
}
//# sourceMappingURL=gettransferinitiation.d.ts.map