import * as shared from "../shared";
import * as z from "zod";
export type GetTransactionRequest = {
    /**
     * Name of the ledger.
     */
    ledger: string;
    /**
     * Transaction ID.
     */
    txid: bigint;
};
export type GetTransactionResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * OK
     */
    transactionResponse?: shared.TransactionResponse | undefined;
};
/** @internal */
export declare namespace GetTransactionRequest$ {
    const inboundSchema: z.ZodType<GetTransactionRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        ledger: string;
        txid: number;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTransactionRequest>;
}
/** @internal */
export declare namespace GetTransactionResponse$ {
    const inboundSchema: z.ZodType<GetTransactionResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        TransactionResponse?: shared.TransactionResponse$.Outbound | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTransactionResponse>;
}
//# sourceMappingURL=gettransaction.d.ts.map