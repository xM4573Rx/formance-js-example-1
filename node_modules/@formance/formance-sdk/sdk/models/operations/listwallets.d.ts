import * as shared from "../shared";
import * as z from "zod";
export type ListWalletsRequest = {
    /**
     * Parameter used in pagination requests.
     *
     * @remarks
     * Set to the value of next for the next page of results.
     * Set to the value of previous for the previous page of results.
     * No other parameters can be set when the pagination token is set.
     *
     */
    cursor?: string | undefined;
    /**
     * Filter wallets by metadata key value pairs. Nested objects can be used as seen in the example below.
     */
    metadata?: {
        [k: string]: string;
    } | undefined;
    /**
     * Filter on wallet name
     */
    name?: string | undefined;
    /**
     * The maximum number of results to return per page
     */
    pageSize?: number | undefined;
};
export type ListWalletsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * OK
     */
    listWalletsResponse?: shared.ListWalletsResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};
/** @internal */
export declare namespace ListWalletsRequest$ {
    const inboundSchema: z.ZodType<ListWalletsRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor?: string | undefined;
        metadata?: {
            [k: string]: string;
        } | undefined;
        name?: string | undefined;
        pageSize: number;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListWalletsRequest>;
}
/** @internal */
export declare namespace ListWalletsResponse$ {
    const inboundSchema: z.ZodType<ListWalletsResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        ContentType: string;
        ListWalletsResponse?: shared.ListWalletsResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListWalletsResponse>;
}
//# sourceMappingURL=listwallets.d.ts.map