import { V2Trigger, V2Trigger$ } from "./v2trigger";
import * as z from "zod";
export type V2ListTriggersResponseCursor = {
    data: Array<V2Trigger>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type V2ListTriggersResponse = {
    cursor: V2ListTriggersResponseCursor;
};
/** @internal */
export declare namespace V2ListTriggersResponseCursor$ {
    const inboundSchema: z.ZodType<V2ListTriggersResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<V2Trigger$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListTriggersResponseCursor>;
}
/** @internal */
export declare namespace V2ListTriggersResponse$ {
    const inboundSchema: z.ZodType<V2ListTriggersResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: V2ListTriggersResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListTriggersResponse>;
}
//# sourceMappingURL=v2listtriggersresponse.d.ts.map