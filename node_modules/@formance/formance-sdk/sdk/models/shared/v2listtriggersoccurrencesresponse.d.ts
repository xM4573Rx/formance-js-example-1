import { V2TriggerOccurrence, V2TriggerOccurrence$ } from "./v2triggeroccurrence";
import * as z from "zod";
export type V2ListTriggersOccurrencesResponseCursor = {
    data: Array<V2TriggerOccurrence>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type V2ListTriggersOccurrencesResponse = {
    cursor: V2ListTriggersOccurrencesResponseCursor;
};
/** @internal */
export declare namespace V2ListTriggersOccurrencesResponseCursor$ {
    const inboundSchema: z.ZodType<V2ListTriggersOccurrencesResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<V2TriggerOccurrence$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListTriggersOccurrencesResponseCursor>;
}
/** @internal */
export declare namespace V2ListTriggersOccurrencesResponse$ {
    const inboundSchema: z.ZodType<V2ListTriggersOccurrencesResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: V2ListTriggersOccurrencesResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListTriggersOccurrencesResponse>;
}
//# sourceMappingURL=v2listtriggersoccurrencesresponse.d.ts.map