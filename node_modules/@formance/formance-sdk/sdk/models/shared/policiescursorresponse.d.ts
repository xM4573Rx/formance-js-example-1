import { Policy, Policy$ } from "./policy";
import * as z from "zod";
export type PoliciesCursorResponseCursor = {
    data: Array<Policy>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type PoliciesCursorResponse = {
    cursor: PoliciesCursorResponseCursor;
};
/** @internal */
export declare namespace PoliciesCursorResponseCursor$ {
    const inboundSchema: z.ZodType<PoliciesCursorResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<Policy$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PoliciesCursorResponseCursor>;
}
/** @internal */
export declare namespace PoliciesCursorResponse$ {
    const inboundSchema: z.ZodType<PoliciesCursorResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: PoliciesCursorResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PoliciesCursorResponse>;
}
//# sourceMappingURL=policiescursorresponse.d.ts.map