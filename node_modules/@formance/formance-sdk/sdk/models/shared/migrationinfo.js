"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MigrationInfo$ = exports.State$ = exports.State = void 0;
const z = __importStar(require("zod"));
var State;
(function (State) {
    State["ToDo"] = "TO DO";
    State["Done"] = "DONE";
})(State || (exports.State = State = {}));
/** @internal */
var State$;
(function (State$) {
    State$.inboundSchema = z.nativeEnum(State);
    State$.outboundSchema = State$.inboundSchema;
})(State$ || (exports.State$ = State$ = {}));
/** @internal */
var MigrationInfo$;
(function (MigrationInfo$) {
    MigrationInfo$.inboundSchema = z.object({
        date: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v))
            .optional(),
        name: z.string().optional(),
        state: State$.inboundSchema.optional(),
        version: z.number().int().optional(),
    });
    MigrationInfo$.outboundSchema = z.object({
        date: z
            .date()
            .transform((v) => v.toISOString())
            .optional(),
        name: z.string().optional(),
        state: State$.outboundSchema.optional(),
        version: z.number().int().optional(),
    });
})(MigrationInfo$ || (exports.MigrationInfo$ = MigrationInfo$ = {}));
//# sourceMappingURL=migrationinfo.js.map