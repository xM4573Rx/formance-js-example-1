import { AdyenConfig, AdyenConfig$ } from "./adyenconfig";
import { AtlarConfig, AtlarConfig$ } from "./atlarconfig";
import { BankingCircleConfig, BankingCircleConfig$ } from "./bankingcircleconfig";
import { CurrencyCloudConfig, CurrencyCloudConfig$ } from "./currencycloudconfig";
import { DummyPayConfig, DummyPayConfig$ } from "./dummypayconfig";
import { GenericConfig, GenericConfig$ } from "./genericconfig";
import { MangoPayConfig, MangoPayConfig$ } from "./mangopayconfig";
import { ModulrConfig, ModulrConfig$ } from "./modulrconfig";
import { MoneycorpConfig, MoneycorpConfig$ } from "./moneycorpconfig";
import { StripeConfig, StripeConfig$ } from "./stripeconfig";
import { WiseConfig, WiseConfig$ } from "./wiseconfig";
import * as z from "zod";
export type ConnectorConfig = WiseConfig | StripeConfig | GenericConfig | ModulrConfig | CurrencyCloudConfig | MangoPayConfig | MoneycorpConfig | AdyenConfig | DummyPayConfig | AtlarConfig | BankingCircleConfig;
/** @internal */
export declare namespace ConnectorConfig$ {
    const inboundSchema: z.ZodType<ConnectorConfig, z.ZodTypeDef, unknown>;
    type Outbound = WiseConfig$.Outbound | StripeConfig$.Outbound | GenericConfig$.Outbound | ModulrConfig$.Outbound | CurrencyCloudConfig$.Outbound | MangoPayConfig$.Outbound | MoneycorpConfig$.Outbound | AdyenConfig$.Outbound | DummyPayConfig$.Outbound | AtlarConfig$.Outbound | BankingCircleConfig$.Outbound;
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConnectorConfig>;
}
//# sourceMappingURL=connectorconfig.d.ts.map