import { BankAccountRelatedAccounts, BankAccountRelatedAccounts$ } from "./bankaccountrelatedaccounts";
import * as z from "zod";
export type BankAccount = {
    accountID?: string | undefined;
    accountNumber?: string | undefined;
    connectorID: string;
    country: string;
    createdAt: Date;
    iban?: string | undefined;
    id: string;
    metadata?: {
        [k: string]: string;
    } | null | undefined;
    name: string;
    provider?: string | undefined;
    relatedAccounts?: Array<BankAccountRelatedAccounts> | undefined;
    swiftBicCode?: string | undefined;
};
/** @internal */
export declare namespace BankAccount$ {
    const inboundSchema: z.ZodType<BankAccount, z.ZodTypeDef, unknown>;
    type Outbound = {
        accountID?: string | undefined;
        accountNumber?: string | undefined;
        connectorID: string;
        country: string;
        createdAt: string;
        iban?: string | undefined;
        id: string;
        metadata?: {
            [k: string]: string;
        } | null | undefined;
        name: string;
        provider?: string | undefined;
        relatedAccounts?: Array<BankAccountRelatedAccounts$.Outbound> | undefined;
        swiftBicCode?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BankAccount>;
}
//# sourceMappingURL=bankaccount.d.ts.map