import { PaymentStatus } from "./paymentstatus";
import * as z from "zod";
export type TaskMangoPayDescriptor = {
    key?: string | undefined;
    name?: string | undefined;
    userID?: string | undefined;
};
export type TaskMangoPayState = {};
export type TaskMangoPay = {
    connectorID: string;
    createdAt: Date;
    descriptor: TaskMangoPayDescriptor;
    error?: string | undefined;
    id: string;
    state: TaskMangoPayState;
    status: PaymentStatus;
    updatedAt: Date;
};
/** @internal */
export declare namespace TaskMangoPayDescriptor$ {
    const inboundSchema: z.ZodType<TaskMangoPayDescriptor, z.ZodTypeDef, unknown>;
    type Outbound = {
        key?: string | undefined;
        name?: string | undefined;
        userID?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskMangoPayDescriptor>;
}
/** @internal */
export declare namespace TaskMangoPayState$ {
    const inboundSchema: z.ZodType<TaskMangoPayState, z.ZodTypeDef, unknown>;
    type Outbound = {};
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskMangoPayState>;
}
/** @internal */
export declare namespace TaskMangoPay$ {
    const inboundSchema: z.ZodType<TaskMangoPay, z.ZodTypeDef, unknown>;
    type Outbound = {
        connectorID: string;
        createdAt: string;
        descriptor: TaskMangoPayDescriptor$.Outbound;
        error?: string | undefined;
        id: string;
        state: TaskMangoPayState$.Outbound;
        status: string;
        updatedAt: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskMangoPay>;
}
//# sourceMappingURL=taskmangopay.d.ts.map