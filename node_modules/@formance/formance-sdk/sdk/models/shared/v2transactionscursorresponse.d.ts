import { V2ExpandedTransaction, V2ExpandedTransaction$ } from "./v2expandedtransaction";
import * as z from "zod";
export type V2TransactionsCursorResponseCursor = {
    data: Array<V2ExpandedTransaction>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type V2TransactionsCursorResponse = {
    cursor: V2TransactionsCursorResponseCursor;
};
/** @internal */
export declare namespace V2TransactionsCursorResponseCursor$ {
    const inboundSchema: z.ZodType<V2TransactionsCursorResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<V2ExpandedTransaction$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2TransactionsCursorResponseCursor>;
}
/** @internal */
export declare namespace V2TransactionsCursorResponse$ {
    const inboundSchema: z.ZodType<V2TransactionsCursorResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: V2TransactionsCursorResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2TransactionsCursorResponse>;
}
//# sourceMappingURL=v2transactionscursorresponse.d.ts.map