import { V2Workflow, V2Workflow$ } from "./v2workflow";
import * as z from "zod";
export type V2ListWorkflowsResponseCursor = {
    data: Array<V2Workflow>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type V2ListWorkflowsResponse = {
    cursor: V2ListWorkflowsResponseCursor;
};
/** @internal */
export declare namespace V2ListWorkflowsResponseCursor$ {
    const inboundSchema: z.ZodType<V2ListWorkflowsResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<V2Workflow$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListWorkflowsResponseCursor>;
}
/** @internal */
export declare namespace V2ListWorkflowsResponse$ {
    const inboundSchema: z.ZodType<V2ListWorkflowsResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: V2ListWorkflowsResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListWorkflowsResponse>;
}
//# sourceMappingURL=v2listworkflowsresponse.d.ts.map