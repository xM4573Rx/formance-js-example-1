import { Hold, Hold$ } from "./hold";
import * as z from "zod";
export type GetHoldsResponseCursor = {
    data: Array<Hold>;
    hasMore?: boolean | undefined;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type GetHoldsResponse = {
    cursor: GetHoldsResponseCursor;
};
/** @internal */
export declare namespace GetHoldsResponseCursor$ {
    const inboundSchema: z.ZodType<GetHoldsResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<Hold$.Outbound>;
        hasMore?: boolean | undefined;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetHoldsResponseCursor>;
}
/** @internal */
export declare namespace GetHoldsResponse$ {
    const inboundSchema: z.ZodType<GetHoldsResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: GetHoldsResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetHoldsResponse>;
}
//# sourceMappingURL=getholdsresponse.d.ts.map