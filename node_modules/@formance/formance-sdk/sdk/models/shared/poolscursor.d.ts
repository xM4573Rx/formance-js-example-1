import { Pool, Pool$ } from "./pool";
import * as z from "zod";
export type PoolsCursorCursor = {
    data: Array<Pool>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type PoolsCursor = {
    cursor: PoolsCursorCursor;
};
/** @internal */
export declare namespace PoolsCursorCursor$ {
    const inboundSchema: z.ZodType<PoolsCursorCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<Pool$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PoolsCursorCursor>;
}
/** @internal */
export declare namespace PoolsCursor$ {
    const inboundSchema: z.ZodType<PoolsCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: PoolsCursorCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PoolsCursor>;
}
//# sourceMappingURL=poolscursor.d.ts.map