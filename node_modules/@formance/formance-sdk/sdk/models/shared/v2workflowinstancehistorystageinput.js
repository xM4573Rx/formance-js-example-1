"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.V2WorkflowInstanceHistoryStageInput$ = void 0;
const primitives_1 = require("../../../lib/primitives");
const v2activityaddaccountmetadata_1 = require("./v2activityaddaccountmetadata");
const v2activityconfirmhold_1 = require("./v2activityconfirmhold");
const v2activitycreatetransaction_1 = require("./v2activitycreatetransaction");
const v2activitycreditwallet_1 = require("./v2activitycreditwallet");
const v2activitydebitwallet_1 = require("./v2activitydebitwallet");
const v2activitygetaccount_1 = require("./v2activitygetaccount");
const v2activitygetpayment_1 = require("./v2activitygetpayment");
const v2activitygetwallet_1 = require("./v2activitygetwallet");
const v2activitylistwallets_1 = require("./v2activitylistwallets");
const v2activitystripetransfer_1 = require("./v2activitystripetransfer");
const v2activityvoidhold_1 = require("./v2activityvoidhold");
const z = __importStar(require("zod"));
/** @internal */
var V2WorkflowInstanceHistoryStageInput$;
(function (V2WorkflowInstanceHistoryStageInput$) {
    V2WorkflowInstanceHistoryStageInput$.inboundSchema = z
        .object({
        AddAccountMetadata: v2activityaddaccountmetadata_1.V2ActivityAddAccountMetadata$.inboundSchema.optional(),
        ConfirmHold: v2activityconfirmhold_1.V2ActivityConfirmHold$.inboundSchema.optional(),
        CreateTransaction: v2activitycreatetransaction_1.V2ActivityCreateTransaction$.inboundSchema.optional(),
        CreditWallet: v2activitycreditwallet_1.V2ActivityCreditWallet$.inboundSchema.optional(),
        DebitWallet: v2activitydebitwallet_1.V2ActivityDebitWallet$.inboundSchema.optional(),
        GetAccount: v2activitygetaccount_1.V2ActivityGetAccount$.inboundSchema.optional(),
        GetPayment: v2activitygetpayment_1.V2ActivityGetPayment$.inboundSchema.optional(),
        GetWallet: v2activitygetwallet_1.V2ActivityGetWallet$.inboundSchema.optional(),
        ListWallets: v2activitylistwallets_1.V2ActivityListWallets$.inboundSchema.optional(),
        StripeTransfer: v2activitystripetransfer_1.V2ActivityStripeTransfer$.inboundSchema.optional(),
        VoidHold: v2activityvoidhold_1.V2ActivityVoidHold$.inboundSchema.optional(),
    })
        .transform((v) => {
        return (0, primitives_1.remap)(v, {
            AddAccountMetadata: "addAccountMetadata",
            ConfirmHold: "confirmHold",
            CreateTransaction: "createTransaction",
            CreditWallet: "creditWallet",
            DebitWallet: "debitWallet",
            GetAccount: "getAccount",
            GetPayment: "getPayment",
            GetWallet: "getWallet",
            ListWallets: "listWallets",
            StripeTransfer: "stripeTransfer",
            VoidHold: "voidHold",
        });
    });
    V2WorkflowInstanceHistoryStageInput$.outboundSchema = z
        .object({
        addAccountMetadata: v2activityaddaccountmetadata_1.V2ActivityAddAccountMetadata$.outboundSchema.optional(),
        confirmHold: v2activityconfirmhold_1.V2ActivityConfirmHold$.outboundSchema.optional(),
        createTransaction: v2activitycreatetransaction_1.V2ActivityCreateTransaction$.outboundSchema.optional(),
        creditWallet: v2activitycreditwallet_1.V2ActivityCreditWallet$.outboundSchema.optional(),
        debitWallet: v2activitydebitwallet_1.V2ActivityDebitWallet$.outboundSchema.optional(),
        getAccount: v2activitygetaccount_1.V2ActivityGetAccount$.outboundSchema.optional(),
        getPayment: v2activitygetpayment_1.V2ActivityGetPayment$.outboundSchema.optional(),
        getWallet: v2activitygetwallet_1.V2ActivityGetWallet$.outboundSchema.optional(),
        listWallets: v2activitylistwallets_1.V2ActivityListWallets$.outboundSchema.optional(),
        stripeTransfer: v2activitystripetransfer_1.V2ActivityStripeTransfer$.outboundSchema.optional(),
        voidHold: v2activityvoidhold_1.V2ActivityVoidHold$.outboundSchema.optional(),
    })
        .transform((v) => {
        return (0, primitives_1.remap)(v, {
            addAccountMetadata: "AddAccountMetadata",
            confirmHold: "ConfirmHold",
            createTransaction: "CreateTransaction",
            creditWallet: "CreditWallet",
            debitWallet: "DebitWallet",
            getAccount: "GetAccount",
            getPayment: "GetPayment",
            getWallet: "GetWallet",
            listWallets: "ListWallets",
            stripeTransfer: "StripeTransfer",
            voidHold: "VoidHold",
        });
    });
})(V2WorkflowInstanceHistoryStageInput$ || (exports.V2WorkflowInstanceHistoryStageInput$ = V2WorkflowInstanceHistoryStageInput$ = {}));
//# sourceMappingURL=v2workflowinstancehistorystageinput.js.map