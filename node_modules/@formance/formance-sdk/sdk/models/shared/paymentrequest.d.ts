import { PaymentScheme } from "./paymentscheme";
import { PaymentStatus } from "./paymentstatus";
import { PaymentType } from "./paymenttype";
import * as z from "zod";
export type PaymentRequest = {
    amount: bigint;
    asset: string;
    connectorID: string;
    createdAt: Date;
    destinationAccountID?: string | undefined;
    reference: string;
    scheme: PaymentScheme;
    sourceAccountID?: string | undefined;
    status: PaymentStatus;
    type: PaymentType;
};
/** @internal */
export declare namespace PaymentRequest$ {
    const inboundSchema: z.ZodType<PaymentRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        amount: number;
        asset: string;
        connectorID: string;
        createdAt: string;
        destinationAccountID?: string | undefined;
        reference: string;
        scheme: string;
        sourceAccountID?: string | undefined;
        status: string;
        type: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentRequest>;
}
//# sourceMappingURL=paymentrequest.d.ts.map