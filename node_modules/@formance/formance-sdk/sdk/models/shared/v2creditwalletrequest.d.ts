import { V2Monetary, V2Monetary$ } from "./v2monetary";
import { V2Subject, V2Subject$ } from "./v2subject";
import * as z from "zod";
export type V2CreditWalletRequest = {
    amount: V2Monetary;
    /**
     * The balance to credit
     */
    balance?: string | undefined;
    /**
     * Metadata associated with the wallet.
     */
    metadata: {
        [k: string]: string;
    };
    reference?: string | undefined;
    sources: Array<V2Subject>;
    timestamp?: Date | undefined;
};
/** @internal */
export declare namespace V2CreditWalletRequest$ {
    const inboundSchema: z.ZodType<V2CreditWalletRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        amount: V2Monetary$.Outbound;
        balance?: string | undefined;
        metadata: {
            [k: string]: string;
        };
        reference?: string | undefined;
        sources: Array<V2Subject$.Outbound>;
        timestamp?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2CreditWalletRequest>;
}
//# sourceMappingURL=v2creditwalletrequest.d.ts.map