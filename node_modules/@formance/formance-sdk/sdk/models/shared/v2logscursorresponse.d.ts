import { V2Log, V2Log$ } from "./v2log";
import * as z from "zod";
export type V2LogsCursorResponseCursor = {
    data: Array<V2Log>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type V2LogsCursorResponse = {
    cursor: V2LogsCursorResponseCursor;
};
/** @internal */
export declare namespace V2LogsCursorResponseCursor$ {
    const inboundSchema: z.ZodType<V2LogsCursorResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<V2Log$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2LogsCursorResponseCursor>;
}
/** @internal */
export declare namespace V2LogsCursorResponse$ {
    const inboundSchema: z.ZodType<V2LogsCursorResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: V2LogsCursorResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2LogsCursorResponse>;
}
//# sourceMappingURL=v2logscursorresponse.d.ts.map