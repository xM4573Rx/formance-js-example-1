import { PaymentsAccount, PaymentsAccount$ } from "./paymentsaccount";
import * as z from "zod";
export type Cursor = {
    data: Array<PaymentsAccount>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type AccountsCursor = {
    cursor: Cursor;
};
/** @internal */
export declare namespace Cursor$ {
    const inboundSchema: z.ZodType<Cursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<PaymentsAccount$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Cursor>;
}
/** @internal */
export declare namespace AccountsCursor$ {
    const inboundSchema: z.ZodType<AccountsCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: Cursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountsCursor>;
}
//# sourceMappingURL=accountscursor.d.ts.map