import { PaymentStatus } from "./paymentstatus";
import * as z from "zod";
export type TaskMoneycorpDescriptor = {
    accountID?: string | undefined;
    key?: string | undefined;
    name?: string | undefined;
};
export type TaskMoneycorpState = {};
export type TaskMoneycorp = {
    connectorID: string;
    createdAt: Date;
    descriptor: TaskMoneycorpDescriptor;
    error?: string | undefined;
    id: string;
    state: TaskMoneycorpState;
    status: PaymentStatus;
    updatedAt: Date;
};
/** @internal */
export declare namespace TaskMoneycorpDescriptor$ {
    const inboundSchema: z.ZodType<TaskMoneycorpDescriptor, z.ZodTypeDef, unknown>;
    type Outbound = {
        accountID?: string | undefined;
        key?: string | undefined;
        name?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskMoneycorpDescriptor>;
}
/** @internal */
export declare namespace TaskMoneycorpState$ {
    const inboundSchema: z.ZodType<TaskMoneycorpState, z.ZodTypeDef, unknown>;
    type Outbound = {};
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskMoneycorpState>;
}
/** @internal */
export declare namespace TaskMoneycorp$ {
    const inboundSchema: z.ZodType<TaskMoneycorp, z.ZodTypeDef, unknown>;
    type Outbound = {
        connectorID: string;
        createdAt: string;
        descriptor: TaskMoneycorpDescriptor$.Outbound;
        error?: string | undefined;
        id: string;
        state: TaskMoneycorpState$.Outbound;
        status: string;
        updatedAt: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskMoneycorp>;
}
//# sourceMappingURL=taskmoneycorp.d.ts.map