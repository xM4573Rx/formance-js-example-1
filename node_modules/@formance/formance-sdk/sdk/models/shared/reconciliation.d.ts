import * as z from "zod";
export type Reconciliation = {
    createdAt: Date;
    driftBalances: {
        [k: string]: bigint;
    };
    error?: string | undefined;
    id: string;
    ledgerBalances: {
        [k: string]: bigint;
    };
    paymentsBalances: {
        [k: string]: bigint;
    };
    policyID: string;
    reconciledAtLedger: Date;
    reconciledAtPayments: Date;
    status: string;
};
/** @internal */
export declare namespace Reconciliation$ {
    const inboundSchema: z.ZodType<Reconciliation, z.ZodTypeDef, unknown>;
    type Outbound = {
        createdAt: string;
        driftBalances: {
            [k: string]: number;
        };
        error?: string | undefined;
        id: string;
        ledgerBalances: {
            [k: string]: number;
        };
        paymentsBalances: {
            [k: string]: number;
        };
        policyID: string;
        reconciledAtLedger: string;
        reconciledAtPayments: string;
        status: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Reconciliation>;
}
//# sourceMappingURL=reconciliation.d.ts.map