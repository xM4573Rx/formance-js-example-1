import { Balance, Balance$ } from "./balance";
import * as z from "zod";
export type ListBalancesResponseCursor = {
    data: Array<Balance>;
    hasMore?: boolean | undefined;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type ListBalancesResponse = {
    cursor: ListBalancesResponseCursor;
};
/** @internal */
export declare namespace ListBalancesResponseCursor$ {
    const inboundSchema: z.ZodType<ListBalancesResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<Balance$.Outbound>;
        hasMore?: boolean | undefined;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListBalancesResponseCursor>;
}
/** @internal */
export declare namespace ListBalancesResponse$ {
    const inboundSchema: z.ZodType<ListBalancesResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: ListBalancesResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListBalancesResponse>;
}
//# sourceMappingURL=listbalancesresponse.d.ts.map