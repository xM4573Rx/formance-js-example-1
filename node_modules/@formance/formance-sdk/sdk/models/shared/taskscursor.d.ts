import { TaskBankingCircle, TaskBankingCircle$ } from "./taskbankingcircle";
import { TaskCurrencyCloud, TaskCurrencyCloud$ } from "./taskcurrencycloud";
import { TaskDummyPay, TaskDummyPay$ } from "./taskdummypay";
import { TaskMangoPay, TaskMangoPay$ } from "./taskmangopay";
import { TaskModulr, TaskModulr$ } from "./taskmodulr";
import { TaskMoneycorp, TaskMoneycorp$ } from "./taskmoneycorp";
import { TaskStripe, TaskStripe$ } from "./taskstripe";
import { TaskWise, TaskWise$ } from "./taskwise";
import * as z from "zod";
export type TasksCursorData = TaskStripe | TaskWise | TaskCurrencyCloud | TaskDummyPay | TaskModulr | TaskBankingCircle | TaskMangoPay | TaskMoneycorp;
export type TasksCursorCursor = {
    data: Array<TaskStripe | TaskWise | TaskCurrencyCloud | TaskDummyPay | TaskModulr | TaskBankingCircle | TaskMangoPay | TaskMoneycorp>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type TasksCursor = {
    cursor: TasksCursorCursor;
};
/** @internal */
export declare namespace TasksCursorData$ {
    const inboundSchema: z.ZodType<TasksCursorData, z.ZodTypeDef, unknown>;
    type Outbound = TaskStripe$.Outbound | TaskWise$.Outbound | TaskCurrencyCloud$.Outbound | TaskDummyPay$.Outbound | TaskModulr$.Outbound | TaskBankingCircle$.Outbound | TaskMangoPay$.Outbound | TaskMoneycorp$.Outbound;
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TasksCursorData>;
}
/** @internal */
export declare namespace TasksCursorCursor$ {
    const inboundSchema: z.ZodType<TasksCursorCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<TaskStripe$.Outbound | TaskWise$.Outbound | TaskCurrencyCloud$.Outbound | TaskDummyPay$.Outbound | TaskModulr$.Outbound | TaskBankingCircle$.Outbound | TaskMangoPay$.Outbound | TaskMoneycorp$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TasksCursorCursor>;
}
/** @internal */
export declare namespace TasksCursor$ {
    const inboundSchema: z.ZodType<TasksCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: TasksCursorCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TasksCursor>;
}
//# sourceMappingURL=taskscursor.d.ts.map