import { Connector } from "./connector";
import * as z from "zod";
export type ConnectorsResponseData = {
    connectorID: string;
    enabled?: boolean | undefined;
    name: string;
    provider: Connector;
};
export type ConnectorsResponse = {
    data: Array<ConnectorsResponseData>;
};
/** @internal */
export declare namespace ConnectorsResponseData$ {
    const inboundSchema: z.ZodType<ConnectorsResponseData, z.ZodTypeDef, unknown>;
    type Outbound = {
        connectorID: string;
        enabled?: boolean | undefined;
        name: string;
        provider: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConnectorsResponseData>;
}
/** @internal */
export declare namespace ConnectorsResponse$ {
    const inboundSchema: z.ZodType<ConnectorsResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<ConnectorsResponseData$.Outbound>;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConnectorsResponse>;
}
//# sourceMappingURL=connectorsresponse.d.ts.map