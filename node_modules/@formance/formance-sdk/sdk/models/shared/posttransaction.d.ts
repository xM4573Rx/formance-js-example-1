import { Posting, Posting$ } from "./posting";
import * as z from "zod";
export type PostTransactionScript = {
    plain: string;
    vars?: {
        [k: string]: any;
    } | undefined;
};
export type PostTransaction = {
    metadata?: {
        [k: string]: any;
    } | null | undefined;
    postings?: Array<Posting> | undefined;
    reference?: string | undefined;
    script?: PostTransactionScript | undefined;
    timestamp?: Date | undefined;
};
/** @internal */
export declare namespace PostTransactionScript$ {
    const inboundSchema: z.ZodType<PostTransactionScript, z.ZodTypeDef, unknown>;
    type Outbound = {
        plain: string;
        vars?: {
            [k: string]: any;
        } | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTransactionScript>;
}
/** @internal */
export declare namespace PostTransaction$ {
    const inboundSchema: z.ZodType<PostTransaction, z.ZodTypeDef, unknown>;
    type Outbound = {
        metadata?: {
            [k: string]: any;
        } | null | undefined;
        postings?: Array<Posting$.Outbound> | undefined;
        reference?: string | undefined;
        script?: PostTransactionScript$.Outbound | undefined;
        timestamp?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTransaction>;
}
//# sourceMappingURL=posttransaction.d.ts.map