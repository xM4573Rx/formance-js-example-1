import { WalletsTransaction, WalletsTransaction$ } from "./walletstransaction";
import * as z from "zod";
export type GetTransactionsResponseCursor = {
    data: Array<WalletsTransaction>;
    hasMore?: boolean | undefined;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type GetTransactionsResponse = {
    cursor: GetTransactionsResponseCursor;
};
/** @internal */
export declare namespace GetTransactionsResponseCursor$ {
    const inboundSchema: z.ZodType<GetTransactionsResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<WalletsTransaction$.Outbound>;
        hasMore?: boolean | undefined;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTransactionsResponseCursor>;
}
/** @internal */
export declare namespace GetTransactionsResponse$ {
    const inboundSchema: z.ZodType<GetTransactionsResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: GetTransactionsResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTransactionsResponse>;
}
//# sourceMappingURL=gettransactionsresponse.d.ts.map