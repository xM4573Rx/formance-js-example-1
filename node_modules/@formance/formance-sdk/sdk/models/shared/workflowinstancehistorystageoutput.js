"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowInstanceHistoryStageOutput$ = void 0;
const primitives_1 = require("../../../lib/primitives");
const activitycreatetransactionoutput_1 = require("./activitycreatetransactionoutput");
const activitydebitwalletoutput_1 = require("./activitydebitwalletoutput");
const activitygetaccountoutput_1 = require("./activitygetaccountoutput");
const activitygetpaymentoutput_1 = require("./activitygetpaymentoutput");
const activitygetwalletoutput_1 = require("./activitygetwalletoutput");
const activityreverttransactionoutput_1 = require("./activityreverttransactionoutput");
const orchestrationlistwalletsresponse_1 = require("./orchestrationlistwalletsresponse");
const z = __importStar(require("zod"));
/** @internal */
var WorkflowInstanceHistoryStageOutput$;
(function (WorkflowInstanceHistoryStageOutput$) {
    WorkflowInstanceHistoryStageOutput$.inboundSchema = z
        .object({
        CreateTransaction: activitycreatetransactionoutput_1.ActivityCreateTransactionOutput$.inboundSchema.optional(),
        DebitWallet: activitydebitwalletoutput_1.ActivityDebitWalletOutput$.inboundSchema.optional(),
        GetAccount: activitygetaccountoutput_1.ActivityGetAccountOutput$.inboundSchema.optional(),
        GetPayment: activitygetpaymentoutput_1.ActivityGetPaymentOutput$.inboundSchema.optional(),
        GetWallet: activitygetwalletoutput_1.ActivityGetWalletOutput$.inboundSchema.optional(),
        ListWallets: orchestrationlistwalletsresponse_1.OrchestrationListWalletsResponse$.inboundSchema.optional(),
        RevertTransaction: activityreverttransactionoutput_1.ActivityRevertTransactionOutput$.inboundSchema.optional(),
    })
        .transform((v) => {
        return (0, primitives_1.remap)(v, {
            CreateTransaction: "createTransaction",
            DebitWallet: "debitWallet",
            GetAccount: "getAccount",
            GetPayment: "getPayment",
            GetWallet: "getWallet",
            ListWallets: "listWallets",
            RevertTransaction: "revertTransaction",
        });
    });
    WorkflowInstanceHistoryStageOutput$.outboundSchema = z
        .object({
        createTransaction: activitycreatetransactionoutput_1.ActivityCreateTransactionOutput$.outboundSchema.optional(),
        debitWallet: activitydebitwalletoutput_1.ActivityDebitWalletOutput$.outboundSchema.optional(),
        getAccount: activitygetaccountoutput_1.ActivityGetAccountOutput$.outboundSchema.optional(),
        getPayment: activitygetpaymentoutput_1.ActivityGetPaymentOutput$.outboundSchema.optional(),
        getWallet: activitygetwalletoutput_1.ActivityGetWalletOutput$.outboundSchema.optional(),
        listWallets: orchestrationlistwalletsresponse_1.OrchestrationListWalletsResponse$.outboundSchema.optional(),
        revertTransaction: activityreverttransactionoutput_1.ActivityRevertTransactionOutput$.outboundSchema.optional(),
    })
        .transform((v) => {
        return (0, primitives_1.remap)(v, {
            createTransaction: "CreateTransaction",
            debitWallet: "DebitWallet",
            getAccount: "GetAccount",
            getPayment: "GetPayment",
            getWallet: "GetWallet",
            listWallets: "ListWallets",
            revertTransaction: "RevertTransaction",
        });
    });
})(WorkflowInstanceHistoryStageOutput$ || (exports.WorkflowInstanceHistoryStageOutput$ = WorkflowInstanceHistoryStageOutput$ = {}));
//# sourceMappingURL=workflowinstancehistorystageoutput.js.map