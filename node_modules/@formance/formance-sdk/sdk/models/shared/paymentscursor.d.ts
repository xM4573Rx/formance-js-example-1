import { Payment, Payment$ } from "./payment";
import * as z from "zod";
export type PaymentsCursorCursor = {
    data: Array<Payment>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type PaymentsCursor = {
    cursor: PaymentsCursorCursor;
};
/** @internal */
export declare namespace PaymentsCursorCursor$ {
    const inboundSchema: z.ZodType<PaymentsCursorCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<Payment$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentsCursorCursor>;
}
/** @internal */
export declare namespace PaymentsCursor$ {
    const inboundSchema: z.ZodType<PaymentsCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: PaymentsCursorCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentsCursor>;
}
//# sourceMappingURL=paymentscursor.d.ts.map