"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.V2BulkElementResult$ = exports.V2BulkElementResultCreateTransactionSchemas$ = exports.Schemas$ = exports.V2BulkElementResultRevertTransactionSchemas$ = exports.V2BulkElementResultDeleteMetadataSchemas$ = exports.V2BulkElementResultErrorSchemas$ = void 0;
const v2transaction_1 = require("./v2transaction");
const z = __importStar(require("zod"));
/** @internal */
var V2BulkElementResultErrorSchemas$;
(function (V2BulkElementResultErrorSchemas$) {
    V2BulkElementResultErrorSchemas$.inboundSchema = z.object({
        errorCode: z.string(),
        errorDescription: z.string(),
        errorDetails: z.string().optional(),
        responseType: z.string(),
    });
    V2BulkElementResultErrorSchemas$.outboundSchema = z.object({
        errorCode: z.string(),
        errorDescription: z.string(),
        errorDetails: z.string().optional(),
        responseType: z.string(),
    });
})(V2BulkElementResultErrorSchemas$ || (exports.V2BulkElementResultErrorSchemas$ = V2BulkElementResultErrorSchemas$ = {}));
/** @internal */
var V2BulkElementResultDeleteMetadataSchemas$;
(function (V2BulkElementResultDeleteMetadataSchemas$) {
    V2BulkElementResultDeleteMetadataSchemas$.inboundSchema = z.object({
        responseType: z.string(),
    });
    V2BulkElementResultDeleteMetadataSchemas$.outboundSchema = z.object({
        responseType: z.string(),
    });
})(V2BulkElementResultDeleteMetadataSchemas$ || (exports.V2BulkElementResultDeleteMetadataSchemas$ = V2BulkElementResultDeleteMetadataSchemas$ = {}));
/** @internal */
var V2BulkElementResultRevertTransactionSchemas$;
(function (V2BulkElementResultRevertTransactionSchemas$) {
    V2BulkElementResultRevertTransactionSchemas$.inboundSchema = z.object({
        data: v2transaction_1.V2Transaction$.inboundSchema,
        responseType: z.string(),
    });
    V2BulkElementResultRevertTransactionSchemas$.outboundSchema = z.object({
        data: v2transaction_1.V2Transaction$.outboundSchema,
        responseType: z.string(),
    });
})(V2BulkElementResultRevertTransactionSchemas$ || (exports.V2BulkElementResultRevertTransactionSchemas$ = V2BulkElementResultRevertTransactionSchemas$ = {}));
/** @internal */
var Schemas$;
(function (Schemas$) {
    Schemas$.inboundSchema = z.object({
        responseType: z.string(),
    });
    Schemas$.outboundSchema = z.object({
        responseType: z.string(),
    });
})(Schemas$ || (exports.Schemas$ = Schemas$ = {}));
/** @internal */
var V2BulkElementResultCreateTransactionSchemas$;
(function (V2BulkElementResultCreateTransactionSchemas$) {
    V2BulkElementResultCreateTransactionSchemas$.inboundSchema = z.object({
        data: v2transaction_1.V2Transaction$.inboundSchema,
        responseType: z.string(),
    });
    V2BulkElementResultCreateTransactionSchemas$.outboundSchema = z.object({
        data: v2transaction_1.V2Transaction$.outboundSchema,
        responseType: z.string(),
    });
})(V2BulkElementResultCreateTransactionSchemas$ || (exports.V2BulkElementResultCreateTransactionSchemas$ = V2BulkElementResultCreateTransactionSchemas$ = {}));
/** @internal */
var V2BulkElementResult$;
(function (V2BulkElementResult$) {
    V2BulkElementResult$.inboundSchema = z.union([
        z
            .lazy(() => Schemas$.inboundSchema)
            .and(z
            .object({ responseType: z.literal("ADD_METADATA") })
            .transform((v) => ({ responseType: v.responseType }))),
        z
            .lazy(() => V2BulkElementResultDeleteMetadataSchemas$.inboundSchema)
            .and(z
            .object({ responseType: z.literal("DELETE_METADATA") })
            .transform((v) => ({ responseType: v.responseType }))),
        z
            .lazy(() => V2BulkElementResultCreateTransactionSchemas$.inboundSchema)
            .and(z
            .object({ responseType: z.literal("CREATE_TRANSACTION") })
            .transform((v) => ({ responseType: v.responseType }))),
        z
            .lazy(() => V2BulkElementResultRevertTransactionSchemas$.inboundSchema)
            .and(z
            .object({ responseType: z.literal("REVERT_TRANSACTION") })
            .transform((v) => ({ responseType: v.responseType }))),
        z
            .lazy(() => V2BulkElementResultErrorSchemas$.inboundSchema)
            .and(z
            .object({ responseType: z.literal("ERROR") })
            .transform((v) => ({ responseType: v.responseType }))),
    ]);
    V2BulkElementResult$.outboundSchema = z.union([
        z
            .lazy(() => Schemas$.outboundSchema)
            .and(z
            .object({ responseType: z.literal("ADD_METADATA") })
            .transform((v) => ({ responseType: v.responseType }))),
        z
            .lazy(() => V2BulkElementResultDeleteMetadataSchemas$.outboundSchema)
            .and(z
            .object({ responseType: z.literal("DELETE_METADATA") })
            .transform((v) => ({ responseType: v.responseType }))),
        z
            .lazy(() => V2BulkElementResultCreateTransactionSchemas$.outboundSchema)
            .and(z
            .object({ responseType: z.literal("CREATE_TRANSACTION") })
            .transform((v) => ({ responseType: v.responseType }))),
        z
            .lazy(() => V2BulkElementResultRevertTransactionSchemas$.outboundSchema)
            .and(z
            .object({ responseType: z.literal("REVERT_TRANSACTION") })
            .transform((v) => ({ responseType: v.responseType }))),
        z
            .lazy(() => V2BulkElementResultErrorSchemas$.outboundSchema)
            .and(z
            .object({ responseType: z.literal("ERROR") })
            .transform((v) => ({ responseType: v.responseType }))),
    ]);
})(V2BulkElementResult$ || (exports.V2BulkElementResult$ = V2BulkElementResult$ = {}));
//# sourceMappingURL=v2bulkelementresult.js.map