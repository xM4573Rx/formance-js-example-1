import { V2Monetary, V2Monetary$ } from "./v2monetary";
import { V2Subject, V2Subject$ } from "./v2subject";
import * as z from "zod";
export type V2DebitWalletRequest = {
    amount: V2Monetary;
    balances?: Array<string> | undefined;
    description?: string | undefined;
    destination?: V2Subject | undefined;
    /**
     * Metadata associated with the wallet.
     */
    metadata: {
        [k: string]: string;
    };
    /**
     * Set to true to create a pending hold. If false, the wallet will be debited immediately.
     */
    pending?: boolean | undefined;
    /**
     * cannot be used in conjunction with `pending` property
     */
    timestamp?: Date | undefined;
};
/** @internal */
export declare namespace V2DebitWalletRequest$ {
    const inboundSchema: z.ZodType<V2DebitWalletRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        amount: V2Monetary$.Outbound;
        balances?: Array<string> | undefined;
        description?: string | undefined;
        destination?: V2Subject$.Outbound | undefined;
        metadata: {
            [k: string]: string;
        };
        pending?: boolean | undefined;
        timestamp?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2DebitWalletRequest>;
}
//# sourceMappingURL=v2debitwalletrequest.d.ts.map