import { V2AssetHolder, V2AssetHolder$ } from "./v2assetholder";
import * as z from "zod";
export type Balances = {
    main: V2AssetHolder;
};
export type V2WalletWithBalances = {
    balances: Balances;
    createdAt: Date;
    /**
     * The unique ID of the wallet.
     */
    id: string;
    ledger: string;
    /**
     * Metadata associated with the wallet.
     */
    metadata: {
        [k: string]: string;
    };
    name: string;
};
/** @internal */
export declare namespace Balances$ {
    const inboundSchema: z.ZodType<Balances, z.ZodTypeDef, unknown>;
    type Outbound = {
        main: V2AssetHolder$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Balances>;
}
/** @internal */
export declare namespace V2WalletWithBalances$ {
    const inboundSchema: z.ZodType<V2WalletWithBalances, z.ZodTypeDef, unknown>;
    type Outbound = {
        balances: Balances$.Outbound;
        createdAt: string;
        id: string;
        ledger: string;
        metadata: {
            [k: string]: string;
        };
        name: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2WalletWithBalances>;
}
//# sourceMappingURL=v2walletwithbalances.d.ts.map