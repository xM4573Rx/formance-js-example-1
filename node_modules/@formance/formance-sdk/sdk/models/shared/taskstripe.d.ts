import { PaymentStatus } from "./paymentstatus";
import * as z from "zod";
export type TaskStripeDescriptor = {
    account: string;
    main?: boolean | undefined;
    name: string;
};
export type TaskStripeState = {};
export type TaskStripe = {
    connectorID: string;
    createdAt: Date;
    descriptor: TaskStripeDescriptor;
    error?: string | undefined;
    id: string;
    state: TaskStripeState;
    status: PaymentStatus;
    updatedAt: Date;
};
/** @internal */
export declare namespace TaskStripeDescriptor$ {
    const inboundSchema: z.ZodType<TaskStripeDescriptor, z.ZodTypeDef, unknown>;
    type Outbound = {
        account: string;
        main?: boolean | undefined;
        name: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskStripeDescriptor>;
}
/** @internal */
export declare namespace TaskStripeState$ {
    const inboundSchema: z.ZodType<TaskStripeState, z.ZodTypeDef, unknown>;
    type Outbound = {};
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskStripeState>;
}
/** @internal */
export declare namespace TaskStripe$ {
    const inboundSchema: z.ZodType<TaskStripe, z.ZodTypeDef, unknown>;
    type Outbound = {
        connectorID: string;
        createdAt: string;
        descriptor: TaskStripeDescriptor$.Outbound;
        error?: string | undefined;
        id: string;
        state: TaskStripeState$.Outbound;
        status: string;
        updatedAt: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskStripe>;
}
//# sourceMappingURL=taskstripe.d.ts.map