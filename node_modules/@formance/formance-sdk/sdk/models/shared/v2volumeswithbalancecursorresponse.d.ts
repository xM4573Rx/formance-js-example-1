import { V2VolumesWithBalance, V2VolumesWithBalance$ } from "./v2volumeswithbalance";
import * as z from "zod";
export type V2VolumesWithBalanceCursorResponseCursor = {
    data: Array<V2VolumesWithBalance>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type V2VolumesWithBalanceCursorResponse = {
    cursor: V2VolumesWithBalanceCursorResponseCursor;
};
/** @internal */
export declare namespace V2VolumesWithBalanceCursorResponseCursor$ {
    const inboundSchema: z.ZodType<V2VolumesWithBalanceCursorResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<V2VolumesWithBalance$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2VolumesWithBalanceCursorResponseCursor>;
}
/** @internal */
export declare namespace V2VolumesWithBalanceCursorResponse$ {
    const inboundSchema: z.ZodType<V2VolumesWithBalanceCursorResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: V2VolumesWithBalanceCursorResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2VolumesWithBalanceCursorResponse>;
}
//# sourceMappingURL=v2volumeswithbalancecursorresponse.d.ts.map