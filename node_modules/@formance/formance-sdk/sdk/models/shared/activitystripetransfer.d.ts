import * as z from "zod";
/**
 * A set of key/value pairs that you can attach to a transfer object.
 *
 * @remarks
 * It can be useful for storing additional information about the transfer in a structured format.
 *
 */
export type Metadata = {};
export type ActivityStripeTransfer = {
    amount?: bigint | undefined;
    asset?: string | undefined;
    connectorID?: string | undefined;
    destination?: string | undefined;
    /**
     * A set of key/value pairs that you can attach to a transfer object.
     *
     * @remarks
     * It can be useful for storing additional information about the transfer in a structured format.
     *
     */
    metadata?: Metadata | undefined;
    waitingValidation?: boolean | undefined;
};
/** @internal */
export declare namespace Metadata$ {
    const inboundSchema: z.ZodType<Metadata, z.ZodTypeDef, unknown>;
    type Outbound = {};
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Metadata>;
}
/** @internal */
export declare namespace ActivityStripeTransfer$ {
    const inboundSchema: z.ZodType<ActivityStripeTransfer, z.ZodTypeDef, unknown>;
    type Outbound = {
        amount?: number | undefined;
        asset?: string | undefined;
        connectorID?: string | undefined;
        destination?: string | undefined;
        metadata?: Metadata$.Outbound | undefined;
        waitingValidation: boolean;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ActivityStripeTransfer>;
}
//# sourceMappingURL=activitystripetransfer.d.ts.map