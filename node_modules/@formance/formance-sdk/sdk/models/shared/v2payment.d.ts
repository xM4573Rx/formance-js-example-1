import { V2Connector } from "./v2connector";
import { V2PaymentAdjustment, V2PaymentAdjustment$ } from "./v2paymentadjustment";
import { V2PaymentMetadata, V2PaymentMetadata$ } from "./v2paymentmetadata";
import { V2PaymentStatus } from "./v2paymentstatus";
import * as z from "zod";
export type V2PaymentRaw = {};
export declare enum Scheme {
    Visa = "visa",
    Mastercard = "mastercard",
    Amex = "amex",
    Diners = "diners",
    Discover = "discover",
    Jcb = "jcb",
    Unionpay = "unionpay",
    SepaDebit = "sepa debit",
    SepaCredit = "sepa credit",
    Sepa = "sepa",
    ApplePay = "apple pay",
    GooglePay = "google pay",
    A2a = "a2a",
    AchDebit = "ach debit",
    Ach = "ach",
    Rtp = "rtp",
    Unknown = "unknown",
    Other = "other"
}
export declare enum V2PaymentType {
    PayIn = "PAY-IN",
    Payout = "PAYOUT",
    Transfer = "TRANSFER",
    Other = "OTHER"
}
export type V2Payment = {
    adjustments: Array<V2PaymentAdjustment>;
    asset: string;
    connectorID: string;
    createdAt: Date;
    destinationAccountID: string;
    id: string;
    initialAmount: bigint;
    metadata: V2PaymentMetadata | null;
    provider?: V2Connector | undefined;
    raw: V2PaymentRaw | null;
    reference: string;
    scheme: Scheme;
    sourceAccountID: string;
    status: V2PaymentStatus;
    type: V2PaymentType;
};
/** @internal */
export declare namespace V2PaymentRaw$ {
    const inboundSchema: z.ZodType<V2PaymentRaw, z.ZodTypeDef, unknown>;
    type Outbound = {};
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2PaymentRaw>;
}
/** @internal */
export declare namespace Scheme$ {
    const inboundSchema: z.ZodNativeEnum<typeof Scheme>;
    const outboundSchema: z.ZodNativeEnum<typeof Scheme>;
}
/** @internal */
export declare namespace V2PaymentType$ {
    const inboundSchema: z.ZodNativeEnum<typeof V2PaymentType>;
    const outboundSchema: z.ZodNativeEnum<typeof V2PaymentType>;
}
/** @internal */
export declare namespace V2Payment$ {
    const inboundSchema: z.ZodType<V2Payment, z.ZodTypeDef, unknown>;
    type Outbound = {
        adjustments: Array<V2PaymentAdjustment$.Outbound>;
        asset: string;
        connectorID: string;
        createdAt: string;
        destinationAccountID: string;
        id: string;
        initialAmount: number;
        metadata: V2PaymentMetadata$.Outbound | null;
        provider?: string | undefined;
        raw: V2PaymentRaw$.Outbound | null;
        reference: string;
        scheme: string;
        sourceAccountID: string;
        status: string;
        type: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2Payment>;
}
//# sourceMappingURL=v2payment.d.ts.map