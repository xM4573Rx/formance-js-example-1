import * as z from "zod";
export type CreateClientRequest = {
    description?: string | undefined;
    metadata?: {
        [k: string]: any;
    } | undefined;
    name: string;
    postLogoutRedirectUris?: Array<string> | undefined;
    public?: boolean | undefined;
    redirectUris?: Array<string> | undefined;
    scopes?: Array<string> | undefined;
    trusted?: boolean | undefined;
};
/** @internal */
export declare namespace CreateClientRequest$ {
    const inboundSchema: z.ZodType<CreateClientRequest, z.ZodTypeDef, unknown>;
    type Outbound = {
        description?: string | undefined;
        metadata?: {
            [k: string]: any;
        } | undefined;
        name: string;
        postLogoutRedirectUris?: Array<string> | undefined;
        public?: boolean | undefined;
        redirectUris?: Array<string> | undefined;
        scopes?: Array<string> | undefined;
        trusted?: boolean | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateClientRequest>;
}
//# sourceMappingURL=createclientrequest.d.ts.map