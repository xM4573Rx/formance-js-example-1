import { BalanceWithAssets, BalanceWithAssets$ } from "./balancewithassets";
import * as z from "zod";
export type GetWalletSummaryResponse = {
    availableFunds: {
        [k: string]: bigint;
    };
    balances: Array<BalanceWithAssets>;
    expirableFunds: {
        [k: string]: bigint;
    };
    expiredFunds: {
        [k: string]: bigint;
    };
    holdFunds: {
        [k: string]: bigint;
    };
};
/** @internal */
export declare namespace GetWalletSummaryResponse$ {
    const inboundSchema: z.ZodType<GetWalletSummaryResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        availableFunds: {
            [k: string]: number;
        };
        balances: Array<BalanceWithAssets$.Outbound>;
        expirableFunds: {
            [k: string]: number;
        };
        expiredFunds: {
            [k: string]: number;
        };
        holdFunds: {
            [k: string]: number;
        };
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetWalletSummaryResponse>;
}
//# sourceMappingURL=getwalletsummaryresponse.d.ts.map