"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.V2Payment$ = exports.V2PaymentType$ = exports.Scheme$ = exports.V2PaymentRaw$ = exports.V2PaymentType = exports.Scheme = void 0;
const v2connector_1 = require("./v2connector");
const v2paymentadjustment_1 = require("./v2paymentadjustment");
const v2paymentmetadata_1 = require("./v2paymentmetadata");
const v2paymentstatus_1 = require("./v2paymentstatus");
const z = __importStar(require("zod"));
var Scheme;
(function (Scheme) {
    Scheme["Visa"] = "visa";
    Scheme["Mastercard"] = "mastercard";
    Scheme["Amex"] = "amex";
    Scheme["Diners"] = "diners";
    Scheme["Discover"] = "discover";
    Scheme["Jcb"] = "jcb";
    Scheme["Unionpay"] = "unionpay";
    Scheme["SepaDebit"] = "sepa debit";
    Scheme["SepaCredit"] = "sepa credit";
    Scheme["Sepa"] = "sepa";
    Scheme["ApplePay"] = "apple pay";
    Scheme["GooglePay"] = "google pay";
    Scheme["A2a"] = "a2a";
    Scheme["AchDebit"] = "ach debit";
    Scheme["Ach"] = "ach";
    Scheme["Rtp"] = "rtp";
    Scheme["Unknown"] = "unknown";
    Scheme["Other"] = "other";
})(Scheme || (exports.Scheme = Scheme = {}));
var V2PaymentType;
(function (V2PaymentType) {
    V2PaymentType["PayIn"] = "PAY-IN";
    V2PaymentType["Payout"] = "PAYOUT";
    V2PaymentType["Transfer"] = "TRANSFER";
    V2PaymentType["Other"] = "OTHER";
})(V2PaymentType || (exports.V2PaymentType = V2PaymentType = {}));
/** @internal */
var V2PaymentRaw$;
(function (V2PaymentRaw$) {
    V2PaymentRaw$.inboundSchema = z.object({});
    V2PaymentRaw$.outboundSchema = z.object({});
})(V2PaymentRaw$ || (exports.V2PaymentRaw$ = V2PaymentRaw$ = {}));
/** @internal */
var Scheme$;
(function (Scheme$) {
    Scheme$.inboundSchema = z.nativeEnum(Scheme);
    Scheme$.outboundSchema = Scheme$.inboundSchema;
})(Scheme$ || (exports.Scheme$ = Scheme$ = {}));
/** @internal */
var V2PaymentType$;
(function (V2PaymentType$) {
    V2PaymentType$.inboundSchema = z.nativeEnum(V2PaymentType);
    V2PaymentType$.outboundSchema = V2PaymentType$.inboundSchema;
})(V2PaymentType$ || (exports.V2PaymentType$ = V2PaymentType$ = {}));
/** @internal */
var V2Payment$;
(function (V2Payment$) {
    V2Payment$.inboundSchema = z.object({
        adjustments: z.array(v2paymentadjustment_1.V2PaymentAdjustment$.inboundSchema),
        asset: z.string(),
        connectorID: z.string(),
        createdAt: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v)),
        destinationAccountID: z.string(),
        id: z.string(),
        initialAmount: z.number().transform((v) => BigInt(v)),
        metadata: z.nullable(v2paymentmetadata_1.V2PaymentMetadata$.inboundSchema),
        provider: v2connector_1.V2Connector$.inboundSchema.optional(),
        raw: z.nullable(z.lazy(() => V2PaymentRaw$.inboundSchema)),
        reference: z.string(),
        scheme: Scheme$.inboundSchema,
        sourceAccountID: z.string(),
        status: v2paymentstatus_1.V2PaymentStatus$.inboundSchema,
        type: V2PaymentType$.inboundSchema,
    });
    V2Payment$.outboundSchema = z.object({
        adjustments: z.array(v2paymentadjustment_1.V2PaymentAdjustment$.outboundSchema),
        asset: z.string(),
        connectorID: z.string(),
        createdAt: z.date().transform((v) => v.toISOString()),
        destinationAccountID: z.string(),
        id: z.string(),
        initialAmount: z.bigint().transform((v) => Number(v)),
        metadata: z.nullable(v2paymentmetadata_1.V2PaymentMetadata$.outboundSchema),
        provider: v2connector_1.V2Connector$.outboundSchema.optional(),
        raw: z.nullable(z.lazy(() => V2PaymentRaw$.outboundSchema)),
        reference: z.string(),
        scheme: Scheme$.outboundSchema,
        sourceAccountID: z.string(),
        status: v2paymentstatus_1.V2PaymentStatus$.outboundSchema,
        type: V2PaymentType$.outboundSchema,
    });
})(V2Payment$ || (exports.V2Payment$ = V2Payment$ = {}));
//# sourceMappingURL=v2payment.js.map