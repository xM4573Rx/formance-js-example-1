import { Account, Account$ } from "./account";
import * as z from "zod";
export type AccountsCursorResponseCursor = {
    data: Array<Account>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type AccountsCursorResponse = {
    cursor: AccountsCursorResponseCursor;
};
/** @internal */
export declare namespace AccountsCursorResponseCursor$ {
    const inboundSchema: z.ZodType<AccountsCursorResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<Account$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountsCursorResponseCursor>;
}
/** @internal */
export declare namespace AccountsCursorResponse$ {
    const inboundSchema: z.ZodType<AccountsCursorResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: AccountsCursorResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountsCursorResponse>;
}
//# sourceMappingURL=accountscursorresponse.d.ts.map