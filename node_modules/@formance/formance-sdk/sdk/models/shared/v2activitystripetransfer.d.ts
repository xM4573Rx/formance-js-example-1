import * as z from "zod";
/**
 * A set of key/value pairs that you can attach to a transfer object.
 *
 * @remarks
 * It can be useful for storing additional information about the transfer in a structured format.
 *
 */
export type V2ActivityStripeTransferMetadata = {};
export type V2ActivityStripeTransfer = {
    amount?: bigint | undefined;
    asset?: string | undefined;
    connectorID?: string | undefined;
    destination?: string | undefined;
    /**
     * A set of key/value pairs that you can attach to a transfer object.
     *
     * @remarks
     * It can be useful for storing additional information about the transfer in a structured format.
     *
     */
    metadata?: V2ActivityStripeTransferMetadata | undefined;
    waitingValidation?: boolean | undefined;
};
/** @internal */
export declare namespace V2ActivityStripeTransferMetadata$ {
    const inboundSchema: z.ZodType<V2ActivityStripeTransferMetadata, z.ZodTypeDef, unknown>;
    type Outbound = {};
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ActivityStripeTransferMetadata>;
}
/** @internal */
export declare namespace V2ActivityStripeTransfer$ {
    const inboundSchema: z.ZodType<V2ActivityStripeTransfer, z.ZodTypeDef, unknown>;
    type Outbound = {
        amount?: number | undefined;
        asset?: string | undefined;
        connectorID?: string | undefined;
        destination?: string | undefined;
        metadata?: V2ActivityStripeTransferMetadata$.Outbound | undefined;
        waitingValidation: boolean;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ActivityStripeTransfer>;
}
//# sourceMappingURL=v2activitystripetransfer.d.ts.map