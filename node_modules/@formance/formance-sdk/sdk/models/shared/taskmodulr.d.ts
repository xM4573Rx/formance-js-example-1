import { PaymentStatus } from "./paymentstatus";
import * as z from "zod";
export type TaskModulrDescriptor = {
    accountID?: string | undefined;
    key?: string | undefined;
    name?: string | undefined;
};
export type TaskModulrState = {};
export type TaskModulr = {
    connectorID: string;
    createdAt: Date;
    descriptor: TaskModulrDescriptor;
    error?: string | undefined;
    id: string;
    state: TaskModulrState;
    status: PaymentStatus;
    updatedAt: Date;
};
/** @internal */
export declare namespace TaskModulrDescriptor$ {
    const inboundSchema: z.ZodType<TaskModulrDescriptor, z.ZodTypeDef, unknown>;
    type Outbound = {
        accountID?: string | undefined;
        key?: string | undefined;
        name?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskModulrDescriptor>;
}
/** @internal */
export declare namespace TaskModulrState$ {
    const inboundSchema: z.ZodType<TaskModulrState, z.ZodTypeDef, unknown>;
    type Outbound = {};
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskModulrState>;
}
/** @internal */
export declare namespace TaskModulr$ {
    const inboundSchema: z.ZodType<TaskModulr, z.ZodTypeDef, unknown>;
    type Outbound = {
        connectorID: string;
        createdAt: string;
        descriptor: TaskModulrDescriptor$.Outbound;
        error?: string | undefined;
        id: string;
        state: TaskModulrState$.Outbound;
        status: string;
        updatedAt: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskModulr>;
}
//# sourceMappingURL=taskmodulr.d.ts.map