import { V2WorkflowInstance, V2WorkflowInstance$ } from "./v2workflowinstance";
import * as z from "zod";
export type V2ListRunsResponseCursor = {
    data: Array<V2WorkflowInstance>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type V2ListRunsResponse = {
    cursor: V2ListRunsResponseCursor;
};
/** @internal */
export declare namespace V2ListRunsResponseCursor$ {
    const inboundSchema: z.ZodType<V2ListRunsResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<V2WorkflowInstance$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListRunsResponseCursor>;
}
/** @internal */
export declare namespace V2ListRunsResponse$ {
    const inboundSchema: z.ZodType<V2ListRunsResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: V2ListRunsResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2ListRunsResponse>;
}
//# sourceMappingURL=v2listrunsresponse.d.ts.map