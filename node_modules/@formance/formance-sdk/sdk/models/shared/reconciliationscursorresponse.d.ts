import { Reconciliation, Reconciliation$ } from "./reconciliation";
import * as z from "zod";
export type ReconciliationsCursorResponseCursor = {
    data: Array<Reconciliation>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type ReconciliationsCursorResponse = {
    cursor: ReconciliationsCursorResponseCursor;
};
/** @internal */
export declare namespace ReconciliationsCursorResponseCursor$ {
    const inboundSchema: z.ZodType<ReconciliationsCursorResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<Reconciliation$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReconciliationsCursorResponseCursor>;
}
/** @internal */
export declare namespace ReconciliationsCursorResponse$ {
    const inboundSchema: z.ZodType<ReconciliationsCursorResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: ReconciliationsCursorResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReconciliationsCursorResponse>;
}
//# sourceMappingURL=reconciliationscursorresponse.d.ts.map