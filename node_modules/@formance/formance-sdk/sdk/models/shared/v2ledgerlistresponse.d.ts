import { V2Ledger, V2Ledger$ } from "./v2ledger";
import * as z from "zod";
export type V2LedgerListResponseCursor = {
    data: Array<V2Ledger>;
    hasMore: boolean;
    next?: string | undefined;
    pageSize: number;
    previous?: string | undefined;
};
export type V2LedgerListResponse = {
    cursor: V2LedgerListResponseCursor;
};
/** @internal */
export declare namespace V2LedgerListResponseCursor$ {
    const inboundSchema: z.ZodType<V2LedgerListResponseCursor, z.ZodTypeDef, unknown>;
    type Outbound = {
        data: Array<V2Ledger$.Outbound>;
        hasMore: boolean;
        next?: string | undefined;
        pageSize: number;
        previous?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2LedgerListResponseCursor>;
}
/** @internal */
export declare namespace V2LedgerListResponse$ {
    const inboundSchema: z.ZodType<V2LedgerListResponse, z.ZodTypeDef, unknown>;
    type Outbound = {
        cursor: V2LedgerListResponseCursor$.Outbound;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V2LedgerListResponse>;
}
//# sourceMappingURL=v2ledgerlistresponse.d.ts.map