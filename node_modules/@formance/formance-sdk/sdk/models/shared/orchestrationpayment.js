"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrchestrationPayment$ = exports.OrchestrationPaymentType$ = exports.OrchestrationPaymentScheme$ = exports.OrchestrationPaymentRaw$ = exports.OrchestrationPaymentType = exports.OrchestrationPaymentScheme = void 0;
const orchestrationconnector_1 = require("./orchestrationconnector");
const orchestrationpaymentadjustment_1 = require("./orchestrationpaymentadjustment");
const orchestrationpaymentmetadata_1 = require("./orchestrationpaymentmetadata");
const orchestrationpaymentstatus_1 = require("./orchestrationpaymentstatus");
const z = __importStar(require("zod"));
var OrchestrationPaymentScheme;
(function (OrchestrationPaymentScheme) {
    OrchestrationPaymentScheme["Visa"] = "visa";
    OrchestrationPaymentScheme["Mastercard"] = "mastercard";
    OrchestrationPaymentScheme["Amex"] = "amex";
    OrchestrationPaymentScheme["Diners"] = "diners";
    OrchestrationPaymentScheme["Discover"] = "discover";
    OrchestrationPaymentScheme["Jcb"] = "jcb";
    OrchestrationPaymentScheme["Unionpay"] = "unionpay";
    OrchestrationPaymentScheme["SepaDebit"] = "sepa debit";
    OrchestrationPaymentScheme["SepaCredit"] = "sepa credit";
    OrchestrationPaymentScheme["Sepa"] = "sepa";
    OrchestrationPaymentScheme["ApplePay"] = "apple pay";
    OrchestrationPaymentScheme["GooglePay"] = "google pay";
    OrchestrationPaymentScheme["A2a"] = "a2a";
    OrchestrationPaymentScheme["AchDebit"] = "ach debit";
    OrchestrationPaymentScheme["Ach"] = "ach";
    OrchestrationPaymentScheme["Rtp"] = "rtp";
    OrchestrationPaymentScheme["Unknown"] = "unknown";
    OrchestrationPaymentScheme["Other"] = "other";
})(OrchestrationPaymentScheme || (exports.OrchestrationPaymentScheme = OrchestrationPaymentScheme = {}));
var OrchestrationPaymentType;
(function (OrchestrationPaymentType) {
    OrchestrationPaymentType["PayIn"] = "PAY-IN";
    OrchestrationPaymentType["Payout"] = "PAYOUT";
    OrchestrationPaymentType["Transfer"] = "TRANSFER";
    OrchestrationPaymentType["Other"] = "OTHER";
})(OrchestrationPaymentType || (exports.OrchestrationPaymentType = OrchestrationPaymentType = {}));
/** @internal */
var OrchestrationPaymentRaw$;
(function (OrchestrationPaymentRaw$) {
    OrchestrationPaymentRaw$.inboundSchema = z.object({});
    OrchestrationPaymentRaw$.outboundSchema = z.object({});
})(OrchestrationPaymentRaw$ || (exports.OrchestrationPaymentRaw$ = OrchestrationPaymentRaw$ = {}));
/** @internal */
var OrchestrationPaymentScheme$;
(function (OrchestrationPaymentScheme$) {
    OrchestrationPaymentScheme$.inboundSchema = z.nativeEnum(OrchestrationPaymentScheme);
    OrchestrationPaymentScheme$.outboundSchema = OrchestrationPaymentScheme$.inboundSchema;
})(OrchestrationPaymentScheme$ || (exports.OrchestrationPaymentScheme$ = OrchestrationPaymentScheme$ = {}));
/** @internal */
var OrchestrationPaymentType$;
(function (OrchestrationPaymentType$) {
    OrchestrationPaymentType$.inboundSchema = z.nativeEnum(OrchestrationPaymentType);
    OrchestrationPaymentType$.outboundSchema = OrchestrationPaymentType$.inboundSchema;
})(OrchestrationPaymentType$ || (exports.OrchestrationPaymentType$ = OrchestrationPaymentType$ = {}));
/** @internal */
var OrchestrationPayment$;
(function (OrchestrationPayment$) {
    OrchestrationPayment$.inboundSchema = z.object({
        adjustments: z.array(orchestrationpaymentadjustment_1.OrchestrationPaymentAdjustment$.inboundSchema),
        asset: z.string(),
        connectorID: z.string(),
        createdAt: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v)),
        destinationAccountID: z.string(),
        id: z.string(),
        initialAmount: z.number().transform((v) => BigInt(v)),
        metadata: z.nullable(orchestrationpaymentmetadata_1.OrchestrationPaymentMetadata$.inboundSchema),
        provider: orchestrationconnector_1.OrchestrationConnector$.inboundSchema.optional(),
        raw: z.nullable(z.lazy(() => OrchestrationPaymentRaw$.inboundSchema)),
        reference: z.string(),
        scheme: OrchestrationPaymentScheme$.inboundSchema,
        sourceAccountID: z.string(),
        status: orchestrationpaymentstatus_1.OrchestrationPaymentStatus$.inboundSchema,
        type: OrchestrationPaymentType$.inboundSchema,
    });
    OrchestrationPayment$.outboundSchema = z.object({
        adjustments: z.array(orchestrationpaymentadjustment_1.OrchestrationPaymentAdjustment$.outboundSchema),
        asset: z.string(),
        connectorID: z.string(),
        createdAt: z.date().transform((v) => v.toISOString()),
        destinationAccountID: z.string(),
        id: z.string(),
        initialAmount: z.bigint().transform((v) => Number(v)),
        metadata: z.nullable(orchestrationpaymentmetadata_1.OrchestrationPaymentMetadata$.outboundSchema),
        provider: orchestrationconnector_1.OrchestrationConnector$.outboundSchema.optional(),
        raw: z.nullable(z.lazy(() => OrchestrationPaymentRaw$.outboundSchema)),
        reference: z.string(),
        scheme: OrchestrationPaymentScheme$.outboundSchema,
        sourceAccountID: z.string(),
        status: orchestrationpaymentstatus_1.OrchestrationPaymentStatus$.outboundSchema,
        type: OrchestrationPaymentType$.outboundSchema,
    });
})(OrchestrationPayment$ || (exports.OrchestrationPayment$ = OrchestrationPayment$ = {}));
//# sourceMappingURL=orchestrationpayment.js.map