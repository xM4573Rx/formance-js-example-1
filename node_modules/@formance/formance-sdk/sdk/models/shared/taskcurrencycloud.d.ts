import { PaymentStatus } from "./paymentstatus";
import * as z from "zod";
export type TaskCurrencyCloudDescriptor = {
    name?: string | undefined;
};
export type TaskCurrencyCloudState = {};
export type TaskCurrencyCloud = {
    connectorID: string;
    createdAt: Date;
    descriptor: TaskCurrencyCloudDescriptor;
    error?: string | undefined;
    id: string;
    state: TaskCurrencyCloudState;
    status: PaymentStatus;
    updatedAt: Date;
};
/** @internal */
export declare namespace TaskCurrencyCloudDescriptor$ {
    const inboundSchema: z.ZodType<TaskCurrencyCloudDescriptor, z.ZodTypeDef, unknown>;
    type Outbound = {
        name?: string | undefined;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskCurrencyCloudDescriptor>;
}
/** @internal */
export declare namespace TaskCurrencyCloudState$ {
    const inboundSchema: z.ZodType<TaskCurrencyCloudState, z.ZodTypeDef, unknown>;
    type Outbound = {};
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskCurrencyCloudState>;
}
/** @internal */
export declare namespace TaskCurrencyCloud$ {
    const inboundSchema: z.ZodType<TaskCurrencyCloud, z.ZodTypeDef, unknown>;
    type Outbound = {
        connectorID: string;
        createdAt: string;
        descriptor: TaskCurrencyCloudDescriptor$.Outbound;
        error?: string | undefined;
        id: string;
        state: TaskCurrencyCloudState$.Outbound;
        status: string;
        updatedAt: string;
    };
    const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaskCurrencyCloud>;
}
//# sourceMappingURL=taskcurrencycloud.d.ts.map