import { SDKOptions } from "../lib/config";
import { ClientSDK, RequestOptions } from "../lib/sdks";
import { Auth } from "./auth";
import { Ledger } from "./ledger";
import * as operations from "./models/operations";
import { Orchestration } from "./orchestration";
import { Payments } from "./payments";
import { Reconciliation } from "./reconciliation";
import { Search } from "./search";
import { Wallets } from "./wallets";
import { Webhooks } from "./webhooks";
export declare class SDK extends ClientSDK {
    private readonly options$;
    constructor(options?: SDKOptions);
    private _auth?;
    get auth(): Auth;
    private _ledger?;
    get ledger(): Ledger;
    private _orchestration?;
    get orchestration(): Orchestration;
    private _payments?;
    get payments(): Payments;
    private _reconciliation?;
    get reconciliation(): Reconciliation;
    private _search?;
    get search(): Search;
    private _wallets?;
    get wallets(): Wallets;
    private _webhooks?;
    get webhooks(): Webhooks;
    /**
     * Retrieve OpenID connect well-knowns.
     */
    getOIDCWellKnowns(options?: RequestOptions): Promise<operations.GetOIDCWellKnownsResponse>;
    /**
     * Show stack version information
     */
    getVersions(options?: RequestOptions): Promise<operations.GetVersionsResponse>;
}
//# sourceMappingURL=sdk.d.ts.map